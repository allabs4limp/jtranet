{"version":3,"sources":["webpack:///./src/app/uploads/memos/memos.component.css","webpack:///./src/app/uploads/memos/memos.component.html","webpack:///./src/app/uploads/memos/memos.component.ts","webpack:///./src/app/uploads/payslips/payslips.component.css","webpack:///./src/app/uploads/payslips/payslips.component.html","webpack:///./src/app/uploads/payslips/payslips.component.ts","webpack:///./src/app/uploads/uploads.module.ts","webpack:///./src/app/uploads/uploads.router.ts"],"names":[],"mappings":"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","file":"uploads-uploads-module.js","sourcesContent":["module.exports = \".header-section{\\r\\n    height: 80px;\\r\\n    line-height: 80px;\\r\\n    color: beige;\\r\\n    background-color: rgb(46, 43, 43);\\r\\n    font-size: 24px;\\r\\n    padding-left: 20px;\\r\\n}\\r\\n\\r\\n.card{\\r\\n    background-color: white;\\r\\n    box-shadow:0 3px 5px -1px rgba(0,0,0,.2), 0 6px 10px 0 rgba(0,0,0,.14), 0 1px 18px 0 rgba(0,0,0,.12);\\r\\n    color:black;\\r\\n    margin: 20px;\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\n.uploadList{\\r\\n    padding: 10px;\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 10px;\\r\\n}\"","module.exports = \"\\n<div fxLayout=\\\"column\\\"  class=\\\"components-container-gt-xs\\\"  [ngClass.xs]=\\\"'components-container-xs'\\\"  fxLayoutGap=\\\"20px\\\">\\n\\n    <div fxFlex class=\\\"datepicker-component-holder mat-elevation-z4\\\">\\n      <mat-toolbar class=\\\"table-header\\\">\\n        <h1 class=\\\"mat-headline center-align\\\">UPLOAD MEMOS</h1>\\n      </mat-toolbar>\\n  \\n       \\n          <div class=\\\"container-fluid\\\">\\n              <div class=\\\"row header-section\\\">\\n                  <span> File Upload </span>\\n              </div>\\n          \\n              <div class=\\\"row\\\">\\n                <!--   <div class=\\\"col-md-2\\\"></div> -->\\n                  <div class=\\\"col-md-12\\\">\\n                      <div class=\\\"row card\\\">\\n                          <div class=\\\"col-sm-12\\\">\\n                              <h4>Upload Section</h4>\\n                              <div id=\\\"fileSelector\\\">\\n                                  <input type=\\\"file\\\" name=\\\"fileUpload\\\" id=\\\"fileUpload\\\"\\n                                  multiple ng2FileSelect [uploader]=\\\"uploader\\\">\\n                              </div>\\n                              <div>\\n                                  <div class=\\\"row uploadList\\\" *ngFor=\\\"let item of uploader.queue\\\">\\n                                      <div class=\\\"col-sm-4\\\">{{item.file.name}}</div>\\n                                      <div class=\\\"col-sm-4\\\">\\n                                          <div class=\\\"progress\\\">\\n                                              <div class=\\\"progress-bar bg-success\\\" \\n                                              [ngStyle]=\\\"{'width':item.progress+'%'}\\\"></div>\\n                                          </div>\\n                                      </div>\\n                                      <div class=\\\"col-sm-4\\\">\\n                                              <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"item.upload()\\\">Upload</button>\\n                                              <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"item.remove()\\\">Cancel</button>\\n                                      </div>\\n                                  </div>                        \\n                              </div>\\n                              <div class=\\\"row\\\" *ngIf=\\\"uploader?.queue?.length > 0\\\">\\n                                      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"uploader.uploadAll()\\\">Upload All</button>\\n                              </div>\\n                          </div>                \\n                      </div>\\n          \\n                   <div class=\\\"row card\\\">\\n                          <h4>UPLOADED FILES SECTION</h4>\\n          \\n                          <div class=\\\"row\\\" *ngFor=\\\"let item of attachmentList; let i = index\\\"\\n                          style=\\\"margin:10px;padding:5px;background-color:rgb(231, 229, 229); border-radius:5px; line-height:40px;\\\">\\n                              <div class=\\\"col-sm-6\\\">{{item.originalname}}</div>\\n                              <div class=\\\"col-sm-3\\\" style=\\\"text-align:center;\\\"><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"download(i)\\\">Download</button></div>\\n                              <div class=\\\"col-sm-3\\\" style=\\\"text-align:center;\\\"><button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"delete(i)\\\">Delete</button></div>\\n                            </div>\\n                      </div> \\n                  </div>\\n             <!--      <div class=\\\"col-md-2\\\"></div> -->\\n              </div>\\n          </div>\\n\\n\\n\\n\\n  \\n      \\n  \\n    </div>\\n  </div>\\n  \"","import { Globals } from './../../Globals';\nimport { Component, OnInit } from '@angular/core';\nimport { FileSelectDirective, FileUploader} from 'ng2-file-upload';\nimport { UploadsService } from './../uploads.service';\nimport {saveAs} from 'file-saver';\n\n\n\n@Component({\n  selector: 'app-memos',\n  templateUrl: './memos.component.html',\n  styleUrls: ['./memos.component.css']\n})\nexport class MemosComponent implements OnInit {\n  readonly uri = 'http://' + this.globals.ipaddress + ':3000/uploads/upload';\n\n  uploader = new FileUploader({url: this.uri});\n\n    attachmentList: any = [];\n\n\n  constructor(private _fileService: UploadsService,  private globals: Globals) {\n\n     this.uploader.onCompleteItem = (item: any, response: any , status: any, headers: any) => {\n      this.attachmentList.push(JSON.parse(response));\n  };\n  }\n\n  download(index) {\n    const filename = this.attachmentList[index].originalname;\n\n    this._fileService.downloadFile(filename)\n    .subscribe(\n        data => saveAs(data, filename),\n        error => console.error(error)\n    );\n}\n\n\ndelete(index) {\n  const filename = this.attachmentList[index].originalname;\n  this._fileService.DeleteFile(filename)\n  .subscribe(\n      data => saveAs(data, filename),\n      error => console.error(error)\n  );\n}\n\n\nngOnInit() {\n  this._fileService.GetListofAllMemos().subscribe(result => {\n    this.attachmentList = result;\n   }, error => console.error(error));\n}\n\n\n}\n","module.exports = \".header-section{\\r\\n    height: 80px;\\r\\n    line-height: 80px;\\r\\n    color: beige;\\r\\n    background-color: rgb(46, 43, 43);\\r\\n    font-size: 24px;\\r\\n    padding-left: 20px;\\r\\n}\\r\\n\\r\\n.card{\\r\\n    background-color: white;\\r\\n    box-shadow:0 3px 5px -1px rgba(0,0,0,.2), 0 6px 10px 0 rgba(0,0,0,.14), 0 1px 18px 0 rgba(0,0,0,.12);\\r\\n    color:black;\\r\\n    margin: 20px;\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\n.uploadList{\\r\\n    padding: 10px;\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 10px;\\r\\n}\"","module.exports = \"\\n<div fxLayout=\\\"column\\\"  class=\\\"components-container-gt-xs\\\"  [ngClass.xs]=\\\"'components-container-xs'\\\"  fxLayoutGap=\\\"20px\\\">\\n\\n  <div fxFlex class=\\\"datepicker-component-holder mat-elevation-z4\\\">\\n    <mat-toolbar class=\\\"table-header\\\">\\n      <h1 class=\\\"mat-headline center-align\\\">UPLOAD PAYSLIPS</h1>\\n    </mat-toolbar>\\n\\n     \\n        <div class=\\\"container-fluid\\\">\\n            <div class=\\\"row header-section\\\">\\n                <span> File Upload </span>\\n            </div>\\n        \\n            <div class=\\\"row\\\">\\n              <!--   <div class=\\\"col-md-2\\\"></div> -->\\n                <div class=\\\"col-md-12\\\">\\n                    <div class=\\\"row card\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <h4>Upload Section</h4>\\n                            <div id=\\\"fileSelector\\\">\\n                                <input type=\\\"file\\\" name=\\\"fileUpload\\\" id=\\\"fileUpload\\\"\\n                                multiple ng2FileSelect [uploader]=\\\"uploader\\\">\\n                            </div>\\n                            <div>\\n                                <div class=\\\"row uploadList\\\" *ngFor=\\\"let item of uploader.queue\\\">\\n                                    <div class=\\\"col-sm-4\\\">{{item.file.name}}</div>\\n                                    <div class=\\\"col-sm-4\\\">\\n                                        <div class=\\\"progress\\\">\\n                                            <div class=\\\"progress-bar bg-success\\\" \\n                                            [ngStyle]=\\\"{'width':item.progress+'%'}\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"col-sm-4\\\">\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"item.upload()\\\">Upload</button>\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"item.remove()\\\">Cancel</button>\\n                                    </div>\\n                                </div>                        \\n                            </div>\\n                            <div class=\\\"row\\\" *ngIf=\\\"uploader?.queue?.length > 0\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"uploader.uploadAll()\\\">Upload All</button>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"uploader.clearQueue()\\\">Cancel All</button>\\n                            </div>\\n                        </div>                \\n                    </div>\\n        \\n                \\n                </div>\\n           <!--      <div class=\\\"col-md-2\\\"></div> -->\\n            </div>\\n        </div>\\n\\n\\n\\n\\n\\n    \\n\\n  </div>\\n</div>\\n\"","import { Globals } from './../../Globals';\nimport { Component, OnInit } from '@angular/core';\nimport { FileSelectDirective, FileUploader} from 'ng2-file-upload';\nimport { UploadsService } from './../uploads.service';\nimport {saveAs} from 'file-saver';\n\n\n@Component({\n  selector: 'app-payslips',\n  templateUrl: './payslips.component.html',\n  styleUrls: ['./payslips.component.css']\n})\nexport class PayslipsComponent implements OnInit {\n\n  readonly uri = 'http://' + this.globals.ipaddress + ':3000/uploads/uploadPayslips';\n\n  uploader = new FileUploader({url: this.uri});\n\n    attachmentList: any = [];\n\n\n  constructor(private _fileService: UploadsService,  private globals: Globals) {\n\n     this.uploader.onCompleteItem = (item: any, response: any , status: any, headers: any) => {\n      this.attachmentList.push(JSON.parse(response));\n  };\n  }\n\n\n\n\nngOnInit() {\n}\n\n}\n","import { MemosComponent } from './memos/memos.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule, MatDialogModule } from '@angular/material';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {FileUploadModule} from 'ng2-file-upload';\r\n\r\n\r\nimport { MatProgressSpinnerModule,\r\n         MatRadioModule,\r\n         MatSliderModule,\r\n         MatPaginatorModule,\r\n         MatCardModule,\r\n         MatTableModule,\r\n         MatAutocompleteModule,\r\n         MatCheckboxModule,\r\n         MatSlideToggleModule,\r\n         MatSelectModule,\r\n         MatOptionModule,\r\n         MatProgressBarModule,\r\n         MatMenuModule,\r\n\r\n } from '@angular/material';\r\n import * as hljs from 'highlight.js';\r\nimport { HighlightJsModule, HIGHLIGHT_JS } from 'angular-highlight-js';\r\nimport * as hljsTypescript from 'highlight.js/lib/languages/typescript';\r\n\r\n import { UploadsRouterModule } from './uploads.router';\nimport { PayslipsComponent } from './payslips/payslips.component';\r\n\r\n\r\n\r\n export function highlightJsFactory(): any {\r\n    hljs.registerLanguage('typescript', hljsTypescript);\r\n    return hljs;\r\n  }\r\n\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n    CommonModule,\r\n    FlexLayoutModule,\r\n    UploadsRouterModule,\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    FileUploadModule,\r\n    MatCheckboxModule,\r\n    MatPaginatorModule,\r\n    MatProgressSpinnerModule,\r\n    MatIconModule,\r\n    MatTabsModule,\r\n    MatRadioModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatOptionModule,\r\n    MatStepperModule,\r\n    MatSortModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatMenuModule,\r\n    MatExpansionModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSliderModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    MatProgressBarModule,\r\n    HighlightJsModule.forRoot({\r\n      provide: HIGHLIGHT_JS,\r\n      useFactory: highlightJsFactory\r\n    }),\r\n    ],\r\n\r\n    declarations: [\r\n        MemosComponent,\r\n        PayslipsComponent\r\n\r\n    ],\r\n\r\n    exports: [\r\n      FileUploadModule\r\n    ]\r\n})\r\nexport class UploadsModule { }\r\n","import { PayslipsComponent } from './payslips/payslips.component';\r\nimport { MemosComponent } from './memos/memos.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst UploadsRoutes: Routes = [\r\n    { path: 'memos', component:  MemosComponent , data: { animation: 'buttons' }},\r\n    { path: 'payslips', component:  PayslipsComponent , data: { animation: 'buttons' }},\r\n    { path: '', redirectTo: '/auth/dashboard', pathMatch: 'full'}\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(UploadsRoutes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\n\r\nexport class UploadsRouterModule {}\r\n"],"sourceRoot":""}