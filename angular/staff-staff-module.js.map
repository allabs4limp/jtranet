{"version":3,"sources":["webpack:///./src/app/staff/dialogs/adddialog/adddialog.component.css","webpack:///./src/app/staff/dialogs/adddialog/adddialog.component.html","webpack:///./src/app/staff/dialogs/adddialog/adddialog.component.ts","webpack:///./src/app/staff/dialogs/deletedialog/deletedialog.component.html","webpack:///./src/app/staff/dialogs/deletedialog/deletedialog.component.scss","webpack:///./src/app/staff/dialogs/deletedialog/deletedialog.component.ts","webpack:///./src/app/staff/dialogs/editdialog/editdialog.component.css","webpack:///./src/app/staff/dialogs/editdialog/editdialog.component.html","webpack:///./src/app/staff/dialogs/editdialog/editdialog.component.ts","webpack:///./src/app/staff/profile/profile.component.css","webpack:///./src/app/staff/profile/profile.component.html","webpack:///./src/app/staff/profile/profile.component.ts","webpack:///./src/app/staff/staff.module.ts","webpack:///./src/app/staff/staff.router.ts","webpack:///./src/app/staff/staffdetails/staffdetails.component.html","webpack:///./src/app/staff/staffdetails/staffdetails.component.scss","webpack:///./src/app/staff/staffdetails/staffdetails.component.ts"],"names":[],"mappings":"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","file":"staff-staff-module.js","sourcesContent":["module.exports = \".container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    min-width: 450px;\\r\\n  }\\r\\n  \\r\\n  .container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .form {\\r\\n    display: flex;\\r\\n    padding-top: 6px;\\r\\n  }\\r\\n  \\r\\n  .mat-form-field {\\r\\n    font-size: 16px;\\r\\n    flex-grow: 1;\\r\\n  }\\r\\n  \"","module.exports = \"<div class=\\\"container\\\">\\n    <h3 mat-dialog-title>ADD NEW STAFF  </h3>\\n  \\n    <form class=\\\"mat-dialog-content\\\" [formGroup]=\\\"AddNewStaff\\\" (ngSubmit)=\\\"submit()\\\" #formControl=\\\"ngForm\\\">\\n\\n      <!--Textarea for demo purposes-->\\n      <div class=\\\"form\\\">\\n        <mat-form-field color=\\\"accent\\\">\\n          <textarea matInput formControlName=\\\"idcard\\\" #inputidcard class=\\\"form-control\\\" placeholder=\\\"ID Card\\\" [(ngModel)]=\\\"data.IDcard\\\" name=\\\"idcard\\\" required ></textarea>\\n          <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\n        </mat-form-field>\\n      </div>\\n\\n      <div class=\\\"form\\\">\\n        <mat-form-field color=\\\"accent\\\">\\n          <textarea matInput formControlName=\\\"staffname\\\" #inputstaffname class=\\\"form-control\\\" placeholder=\\\"Staff Name\\\" [(ngModel)]=\\\"data.Staffname\\\" name=\\\"staffname\\\" required ></textarea>\\n          <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\n        </mat-form-field>\\n      </div>\\n  \\n      <!--Contains mat-hint for characters count and has maxLengt set-->\\n      <div class=\\\"form\\\">\\n        <mat-form-field color=\\\"accent\\\">\\n          <input matInput formControlName=\\\"conraiss\\\" #inputconraiss class=\\\"form-control\\\" placeholder=\\\"Conraiss\\\" [(ngModel)]=\\\"data.Conraiss\\\" name=\\\"conraiss\\\" required >\\n          <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\n        </mat-form-field> \\n      </div>\\n  \\n      <div class=\\\"form\\\">\\n\\n          <mat-form-field color=\\\"accent\\\" >\\n              <mat-select formControlName=\\\"department\\\"  [(ngModel)]=\\\"SelectedDept\\\"  name= \\\"department\\\" placeholder=\\\"Department\\\" required>\\n                <mat-option *ngFor=\\\"let dept of department\\\" [value]=\\\"dept.DeptId\\\"> {{dept.DeptName}} </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\n           \\n            </mat-form-field>\\n                  <!--  <mat-form-field color=\\\"accent\\\">\\n                    <input matInput #inputdepartment class=\\\"form-control\\\" placeholder=\\\"Department\\\" [(ngModel)]=\\\"data.Department\\\" name=\\\"department\\\" required >\\n                    <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\n                  </mat-form-field> -->\\n      </div>\\n  \\n      <div class=\\\"form\\\">\\n            <mat-form-field color=\\\"accent\\\">\\n                    <input matInput formControlName=\\\"intercom\\\"  #inputintercom class=\\\"form-control\\\" placeholder=\\\"InterCom No\\\" [(ngModel)]=\\\"data.Intercom\\\" name=\\\"intercom\\\" required >\\n                    <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\n                  </mat-form-field>\\n      </div>\\n  \\n      <div class=\\\"form\\\">\\n            <mat-form-field color=\\\"accent\\\">\\n                    <input matInput formControlName=\\\"email\\\"  #inputemail class=\\\"form-control\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"data.Email\\\" name=\\\"email\\\" required >\\n                    <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\n                  </mat-form-field>\\n      </div>\\n  \\n      <div mat-dialog-actions>\\n        <button mat-button [type]=\\\"submit\\\" [disabled]=\\\"!formControl.valid\\\" [mat-dialog-close]=\\\"1\\\" (click)=\\\"confirmAdd()\\\">Save</button>\\n        <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\n      </div>\\n    </form>\\n  </div>\\n  \"","import { map } from 'rxjs/operators';\nimport { Department } from './../../department.model';\nimport { StaffDetails } from './../../staff.model';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {Component, Inject, OnInit} from '@angular/core';\nimport {StaffService} from '../../staff.service';\nimport { ToastrService } from 'ngx-toastr';\n\n\nimport { FormControl, Validators, FormGroup, NgForm, FormBuilder } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-adddialog',\n  templateUrl: './adddialog.component.html',\n  styleUrls: ['./adddialog.component.css']\n})\nexport class AdddialogComponent implements OnInit {\n  department: Department[];\n staffdetails: StaffDetails[];\n AddNewStaff: FormGroup;\n SelectedDept: any;\n returnedMessage: any;\n\n  constructor(public dialogRef: MatDialogRef<AdddialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: StaffDetails,\n    public staffService: StaffService,\n    private formbuilder: FormBuilder,\n    private toastr: ToastrService) {\n\nthis.AddNewStaff = formbuilder.group({\n            staffname: ['', Validators.required],\n            idcard: ['', Validators.required],\n            conraiss: ['', Validators.required],\n            department: ['', Validators.required],\n            intercom: ['', Validators.required],\n            email: ['', Validators.required],\n\n});\n}\n\n\nformControl = new FormControl('', [Validators.required]);\n\ngetErrorMessage() {\nreturn this.formControl.hasError('required') ? 'Required field' :\nthis.formControl.hasError('email') ? 'Not a valid email' :\n'';\n}\nshowSuccess() {\n  this.toastr.success('New Staff Details Added Succesully');\n}\nshowError() {\n  this.toastr.error('New Staff Not Added, Please try again');\n}\n\nngOnInit() {\n this.LoadDepartment();\n}\n\nLoadDepartment() {\n  this.staffService.GetAllDepartment().subscribe\n  (result => { this.department = result;\n  }, error => console.error(error));\n}\n\nsubmit() {\n  this.staffService.AddNewStaff(this.AddNewStaff.value)\n  .subscribe(res => {  this.showSuccess();\n // console.log('Done');\n},\n    error => {\n      this.showError();\n       // console.log('Error');\n     });\n\n//  .subscribe(result => {\n  //  console.log(result);\n  //  this.staffService.GetStaffdetails();\n //   return true;\n}\n// error => {\n// console.error('Error Inserting');\n// });\n// }\n\nonNoClick(): void {\nthis.dialogRef.close();\n}\n\npublic confirmAdd(): void {\n\n}\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n    <h3 mat-dialog-title>Are you sure?</h3>\\n    <div mat-dialog-content>\\n      ID Card: {{data.idcard}}\\n      <p></p>\\n      Staff Name: {{data.staffname}}\\n      <p></p>\\n      Conraiss: {{data.conraiss}}\\n      <p></p>\\n      Department: {{data.department}}\\n      <p></p>\\n      Intercom: {{data.intercom}}\\n      <p></p>\\n      Email: {{data.email}}\\n      <p></p>\\n    </div>\\n  \\n    <div mat-dialog-actions>\\n      <button mat-button [mat-dialog-close]=\\\"1\\\" (click)=\\\"confirmDelete()\\\">Delete</button>\\n      <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\n    </div>\\n  </div>\\n  \"","module.exports = \"\"","import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {Component, Inject, OnInit} from '@angular/core';\nimport {StaffService} from '../../staff.service';\n\n\n@Component({\n  selector: 'app-deletedialog',\n  templateUrl: './deletedialog.component.html',\n  styleUrls: ['./deletedialog.component.scss']\n})\nexport class DeletedialogComponent  {\n\n  constructor(public dialogRef: MatDialogRef<DeletedialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any, public staffService: StaffService) { }\n\nonNoClick(): void {\nthis.dialogRef.close();\n}\n\nconfirmDelete(): void {\n\n}\n}\n","module.exports = \".container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    min-width: 450px;\\r\\n  }\\r\\n  \\r\\n  .container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .form {\\r\\n    display: flex;\\r\\n    padding-top: 6px;\\r\\n  }\\r\\n  \\r\\n  .mat-form-field {\\r\\n    font-size: 16px;\\r\\n    flex-grow: 1;\\r\\n  }\\r\\n  \"","module.exports = \"<div class=\\\"container\\\">\\n    <h3 mat-dialog-title>Staff Serial No: {{data.serial}} -- {{ data.staffname}}</h3>\\n  \\n    <form class=\\\"mat-dialog-content\\\" #formControl=\\\"ngForm\\\" (ngSubmit)=\\\"submit()\\\" >\\n  \\n      <div class=\\\"form\\\">\\n        <mat-form-field color=\\\"accent\\\">\\n          <input matInput #inputserial class=\\\"form-control\\\" placeholder=\\\"Serial No\\\" [(ngModel)]=\\\"data.serial\\\" name=\\\"serial\\\" disabled required >\\n          <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\n        </mat-form-field>\\n      </div>\\n  \\n      <!--Textarea for demo purposes-->\\n      <div class=\\\"form\\\">\\n        <mat-form-field color=\\\"accent\\\">\\n          <textarea matInput #inputidcrad class=\\\"form-control\\\" placeholder=\\\"ID Card\\\" [(ngModel)]=\\\"data.idcard\\\" name=\\\"idcard\\\" required ></textarea>\\n          <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\n        </mat-form-field>\\n      </div>\\n\\n      <div class=\\\"form\\\">\\n        <mat-form-field color=\\\"accent\\\">\\n          <textarea matInput #inputstaffname class=\\\"form-control\\\" placeholder=\\\"Staff Name\\\" [(ngModel)]=\\\"data.staffname\\\" name=\\\"staffname\\\" required ></textarea>\\n          <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\n        </mat-form-field>\\n      </div>\\n  \\n      <!--Contains mat-hint for characters count and has maxLengt set-->\\n      <div class=\\\"form\\\">\\n        <mat-form-field color=\\\"accent\\\">\\n          <input matInput #inputconraiss class=\\\"form-control\\\" placeholder=\\\"Conraiss\\\" [(ngModel)]=\\\"data.conraiss\\\" name=\\\"conraiss\\\" required >\\n          <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\n        </mat-form-field>\\n      </div>\\n  \\n      <div class=\\\"form\\\">\\n\\n          <mat-form-field color=\\\"accent\\\" >\\n              <mat-select [(ngModel)]=\\\"selecteddept\\\" #inputdepartment=\\\"ngModel\\\" name = \\\"department\\\"  required placeholder=\\\"Department\\\" required>\\n                <mat-option *ngFor=\\\"let dept of department\\\" [value]=\\\"dept.DeptId\\\"> {{dept.DeptName}} </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\n            </mat-form-field>\\n\\n        <!--     <mat-form-field color=\\\"accent\\\">\\n                    <input matInput #inputdepartment class=\\\"form-control\\\" placeholder=\\\"Department\\\" [(ngModel)]=\\\"data.department\\\" name=\\\"department\\\" required >\\n                    <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\n                  </mat-form-field> -->\\n      </div>\\n      \\n      <div class=\\\"form\\\">\\n            <mat-form-field color=\\\"accent\\\">\\n                    <input matInput #inputintercom class=\\\"form-control\\\" placeholder=\\\"InterCom No\\\" [(ngModel)]=\\\"data.intercom\\\" name=\\\"intercom\\\" required >\\n                    <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\n                  </mat-form-field>\\n      </div>\\n  \\n      <div class=\\\"form\\\">\\n            <mat-form-field color=\\\"accent\\\">\\n                    <input matInput #inputemail class=\\\"form-control\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"data.email\\\" name=\\\"email\\\" required >\\n                    <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\n                  </mat-form-field>\\n      </div>\\n  \\n      <div mat-dialog-actions>\\n        <button mat-button [type]=\\\"submit\\\" [disabled]=\\\"!formControl.valid\\\" [mat-dialog-close]=\\\"1\\\" (click)=\\\"stopEdit()\\\">Save</button>\\n        <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\n      </div>\\n    </form>\\n  </div>\\n  \"","import { StaffService } from './../../staff.service';\nimport { LazyLoadModule } from './../../../lazy-load/lazy-load.module';\nimport { Department } from './../../department.model';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, Validators, FormGroup, NgForm, FormBuilder} from '@angular/forms';\nimport { load } from '../../../../../node_modules/@angular/core/src/render3/instructions';\nimport { NgModule } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-editdialog',\n  templateUrl: './editdialog.component.html',\n  styleUrls: ['./editdialog.component.css']\n})\nexport class EditdialogComponent implements OnInit {\n  department: Department[];\n  selecteddept: '';\n  UpdateStaff: FormGroup;\n  Updateform: NgForm;\n\n  constructor(public dialogRef: MatDialogRef<EditdialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any, public staffService: StaffService,\n    private toastr: ToastrService, private formbuilder: FormBuilder) {\n\n\n      this.UpdateStaff = formbuilder.group({\n        serial: [this.data.serial, Validators.required],\n        staffname: [this.data.staffname, Validators.required],\n        idcard: [this.data.idcard, Validators.required],\n        conraiss: [this.data.conraiss, Validators.required],\n        department: [this.selecteddept, Validators.required],\n        intercom: [this.data.intercom, Validators.required],\n        email: [this.data.email, Validators.required],\n\n});\n    }\n\n\n\nformControl = new FormControl('', [\nValidators.required\n// Validators.email,\n]);\n\n\n\ngetErrorMessage() {\nreturn this.formControl.hasError('required') ? 'Required field' :\nthis.formControl.hasError('email') ? 'Not a valid email' :\n'';\n}\n\nngOnInit () {\nthis.loadDepartment();\n}\n\nloadDepartment() {\n  this.staffService.GetAllDepartment().subscribe\n  (result => { this.department = result;\n  }, error => console.error(error));\n}\n\nshowSuccess() {\n  this.toastr.success('Staff Details Updated');\n}\nshowError() {\n  this.toastr.error('Staff not Updated, Please try again');\n}\n\nsubmit() {\n  console.log(this.UpdateStaff.value);\n /*  this.staffService.UpdateStaff(this.UpdateStaff.value)\n  .subscribe(res => {  this.showSuccess();\n\n},\n    error => {\n      this.showError();\n\n     }); */\n\n/*   this.staffService.UpdateStaff({\n    Serial: this.data.serial,\n    IDcard: updateform.value.idcard,\n    Staffname: updateform.value.staffname,\n    Conraiss: updateform.value.conraiss,\n    Department: updateform.value.department,\n    Intercom: updateform.value.intercom,\n    Email: updateform.value.email\n  })\n  .subscribe(res => {this.showSuccess();\n   },\n       error => {\n         this.showError();\n        }); */\n}\n\nonNoClick(): void {\nthis.dialogRef.close();\n}\n\nstopEdit(): void {\n\n}\n\n}\n","module.exports = \".card{\\r\\n    background-color: white;\\r\\n    box-shadow:0 3px 5px -1px rgba(0,0,0,.2), 0 6px 10px 0 rgba(0,0,0,.14), 0 1px 18px 0 rgba(0,0,0,.12);\\r\\n    color:black;\\r\\n    margin: 20px;\\r\\n    padding: 10px;\\r\\n}\\r\\n\"","module.exports = \"\\n<div fxLayout=\\\"column\\\"  class=\\\"components-container-gt-xs\\\"  [ngClass.xs]=\\\"'components-container-xs'\\\"  fxLayoutGap=\\\"20px\\\">\\n\\n  <div fxFlex class=\\\"datepicker-component-holder mat-elevation-z4\\\">\\n    <mat-toolbar class=\\\"table-header\\\">\\n      <h1 class=\\\"mat-headline center-align\\\">EDIT PROFILE</h1>\\n    </mat-toolbar>\\n\\n    <div class=\\\"row\\\">\\n      <!--   <div class=\\\"col-md-2\\\"></div> -->\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"row card\\\">\\n        <div class=\\\"container-fluid\\\">\\n           \\n            <div class=\\\"row\\\">\\n              <!--   <div class=\\\"col-md-2\\\"></div> -->\\n                <div class=\\\"col-md-12\\\">\\n               \\n                 <div class=\\\"row card\\\">\\n\\n  <form [formGroup]=\\\"ProfileUpdate\\\" #updateform=\\\"ngForm\\\" (ngSubmit)=\\\"submit()\\\" >\\n\\n    <div class=\\\"row\\\" style=\\\"text-align:center;\\\">\\n      <mat-form-field color=\\\"accent\\\">\\n        <input matInput  placeholder=\\\"IDCARD NO\\\" [(ngModel)]=\\\"idnum\\\" formControlName=\\\"IDNum\\\" [readonly]=\\\"true\\\" >\\n      </mat-form-field>\\n    </div>\\n    <br>\\n\\n <!--    <div class=\\\"form\\\">\\n      <mat-form-field color=\\\"accent\\\">\\n        <input matInput #inputsession class=\\\"form-control\\\" placeholder=\\\"Session\\\" [(ngModel)]=\\\"data.session\\\" name=\\\"session\\\" disabled >\\n      </mat-form-field>\\n    </div> -->\\n\\n    <!--Textarea for demo purposes-->\\n   <!--  <div class=\\\"form\\\">\\n      <mat-form-field color=\\\"accent\\\">\\n        <input matInput #inputcaller class=\\\"form-control\\\" placeholder=\\\"Caller\\\" [(ngModel)]=\\\"data.caller\\\" name=\\\"caller\\\" disabled >\\n      </mat-form-field>\\n    </div> -->\\n\\n    <div class=\\\"row\\\" style=\\\"text-align:center;\\\">\\n      <mat-form-field style=\\\"width:500px !important\\\"  color=\\\"accent\\\">\\n        <input matInput class=\\\"form-control\\\" placeholder=\\\"STAFF NAME\\\" [(ngModel)]=\\\"staffname\\\" formControlName=\\\"StaffName\\\" required >\\n        <mat-hint style=\\\"color: blue\\\">Edit name</mat-hint>\\n      </mat-form-field>\\n    </div>\\n    <br>\\n\\n    <div class=\\\"row\\\" style=\\\"text-align:center;\\\">\\n      <mat-form-field style=\\\"width:400px !important\\\" color=\\\"accent\\\">\\n        <input matInput class=\\\"form-control\\\" placeholder=\\\"PHONE NUMBER\\\" [(ngModel)]=\\\"phonenum\\\" formControlName=\\\"PhoneNum\\\" required>\\n        <mat-hint style=\\\"color: blue\\\">Edit phone number</mat-hint>\\n      </mat-form-field>\\n    </div>\\n<br>\\n    <div class=\\\"row\\\" style=\\\"text-align:center;\\\">\\n      <mat-form-field style=\\\"width:300px !important\\\" color=\\\"accent\\\" >\\n        <mat-select ngModel formControlName=\\\"level\\\"  required placeholder=\\\"CONRAISS\\\" required>\\n            <mat-option value=\\\"6\\\">6</mat-option>\\n            <mat-option value=\\\"7\\\">7 </mat-option>\\n            <mat-option value=\\\"8\\\">8  </mat-option>\\n            <mat-option value=\\\"9\\\">9</mat-option>\\n            <mat-option value=\\\"10\\\">10</mat-option>\\n            <mat-option value=\\\"11\\\">11 </mat-option>\\n            <mat-option value=\\\"12\\\">12 </mat-option>\\n            <mat-option value=\\\"13\\\">13 </mat-option>\\n        </mat-select>\\n        <mat-hint style=\\\"color: blue\\\">Select Level</mat-hint>\\n      </mat-form-field>\\n    </div>\\n    <br>\\n\\n    <!--Contains mat-hint for characters count and has maxLengt set-->\\n    <div class=\\\"row\\\" style=\\\"text-align:center;\\\">\\n      <mat-form-field style=\\\"width:300px !important\\\" color=\\\"accent\\\">\\n        <input matInput class=\\\"form-control\\\" placeholder=\\\"EMAIL\\\" [(ngModel)]=\\\"email\\\" formControlName=\\\"Email\\\"  required >\\n        <mat-hint style=\\\"color: blue\\\">Edit email address</mat-hint>\\n      </mat-form-field>\\n      \\n    </div>\\n<br>\\n    <div class=\\\"row\\\" style=\\\"text-align:center;\\\">\\n\\n        <mat-form-field style=\\\"width:300px !important\\\" color=\\\"accent\\\" >\\n            <mat-select ngModel  formControlName=\\\"Department\\\" name =\\\"Department\\\"  required placeholder=\\\"DEPARTMENT\\\">\\n                <mat-option *ngFor=\\\"let dept of department\\\" [value]=\\\"dept.DeptId\\\"> {{dept.DeptName}} </mat-option>           \\n            </mat-select>\\n            <mat-hint style=\\\"color: blue\\\">Select Department</mat-hint>\\n          </mat-form-field>\\n    </div>\\n<br>\\n<div class=\\\"row\\\" style=\\\"text-align:center;\\\">\\n  <mat-form-field style=\\\"width:400px !important\\\" color=\\\"accent\\\">\\n    <input matInput class=\\\"form-control\\\" placeholder=\\\"Certificate No\\\" [(ngModel)]=\\\"certnum\\\" formControlName=\\\"Certnum\\\" required>\\n    <mat-hint style=\\\"color: blue\\\">Enter Certificate number</mat-hint>\\n  </mat-form-field>\\n</div>\\n<br>\\n\\n    <div style=\\\"text-align:center;\\\">\\n      <button style=\\\"text-align:center;\\\" [disabled]=\\\"!updateform.form.valid\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" mat raised-button  (click)=\\\"UpdateProfile()\\\">Update</button>\\n    </div>\\n  </form>\\n                 </div>\\n                </div>\\n            </div>\\n        </div>\\n  </div>\\n</div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n\"","import { AuthService } from './../../auth/auth.service';\nimport { StaffService } from './../staff.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, Validators, FormGroup, NgForm, FormBuilder} from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Department } from '../department.model';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  ProfileUpdate: FormGroup;\n  Updateform: NgForm;\n  SelectedIssueCat: any;\n  idnum: any;\n  staffname: any;\n  phonenum: any;\n  level: any;\n  email: any;\n  conraiss: any;\n  certnum: any;\n  department: Department[];\n\n  constructor(\n   public staffservice: StaffService,\n   public authservice: AuthService,\n    private toastr: ToastrService, private formbuilder: FormBuilder) {\n\n\n    }\n\n  ngOnInit() {\n    this.LoadDepartment();\nthis.idnum = localStorage.getItem('idcard');\nthis.staffname = localStorage.getItem('profilename');\nthis.phonenum = localStorage.getItem('phoneno');\nthis.level = localStorage.getItem('level');\nthis.email = localStorage.getItem('email');\nthis.conraiss = localStorage.getItem('conraiss');\nthis.certnum = localStorage.getItem('certnum');\n\n    this.ProfileUpdate = this.formbuilder.group({\n    IDNum: ['', Validators.required],\n    StaffName: [localStorage.getItem('profilename'), Validators.required],\n    PhoneNum: [localStorage.getItem('phoneno'), Validators.required],\n    level: [localStorage.getItem('level'), Validators.required],\n    Email: [localStorage.getItem('email'), Validators.required],\n    Certnum: [localStorage.getItem('certnum'), Validators.required],\n    Department: ['', Validators.required],\n    });\n/*     this.loggedby = localStorage.getItem('profilename');\n    this.UpdateReport = this.formbuilder.group({\n     SerialNo: [this.data.serialno, Validators.required],\n     /*   Session: [this.data.session, Validators.required],\n       Caller: [this.data.caller, Validators.required], */\n/*        IssueCategory: [this.data.issuecategory, Validators.required],\n       LoggedBy: [this.data.loggedby, Validators.required],\n       LoggedDate: [this.data.loggeddate, Validators.required],\n});  */\n  }\n\n  submit() {\n/*     console.log(this.UpdateReport.value);\n    console.log( this.SelectedIssueCat);\nthis.examinationservice.UpdateRegistration(this.UpdateReport.value, this.SelectedIssueCat)\n.subscribe(result => {\n  this.showSuccess();\n  this.examinationservice.GetUTMERegistration(this.loggedby);\n  this.dialogRef.close();\n},\nerror => {\n  this.showError();\n}); */\n}\nLoadDepartment() {\n  this.staffservice.GetAllDepartment().subscribe\n  (result => { this.department = result;\n  }, error => console.error(error));\n}\n\nUpdateProfile() {\n  this.staffservice.UpdateProfileDetails(this.ProfileUpdate.value).subscribe(result => {\n    this.showSuccess();\n    this.authservice.LogOut();\n  },\n  error => {\n    this.showError();\n  });\n}\n\nshowSuccess() {\n  this.toastr.success('Updated Succesfully');\n}\nshowError() {\n  this.toastr.error('Update Failed, Please try again');\n}\n\n\n  stopEdit(): void {\n\n  }\n}\n","import { StaffdetailsComponent } from './staffdetails/staffdetails.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\n\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule, MatDialogModule } from '@angular/material';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport { EditdialogComponent} from './dialogs/editdialog/editdialog.component';\r\nimport { AdddialogComponent } from './dialogs/adddialog/adddialog.component';\r\n\r\nimport { MatProgressSpinnerModule,\r\n         MatRadioModule,\r\n         MatSliderModule,\r\n         MatPaginatorModule,\r\n         MatCardModule,\r\n         MatTableModule,\r\n         MatAutocompleteModule,\r\n         MatCheckboxModule,\r\n         MatSlideToggleModule,\r\n         MatSelectModule,\r\n         MatOptionModule,\r\n         MatProgressBarModule,\r\n         MatMenuModule,\r\n\r\n } from '@angular/material';\r\n import * as hljs from 'highlight.js';\r\nimport { HighlightJsModule, HIGHLIGHT_JS } from 'angular-highlight-js';\r\nimport * as hljsTypescript from 'highlight.js/lib/languages/typescript';\r\n\r\n import { StaffRouterModule } from './staff.router';\r\nimport { DeletedialogComponent } from './dialogs/deletedialog/deletedialog.component';\nimport { ProfileComponent } from './profile/profile.component';\r\n\r\n\r\n export function highlightJsFactory(): any {\r\n    hljs.registerLanguage('typescript', hljsTypescript);\r\n    return hljs;\r\n  }\r\n\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n    CommonModule,\r\n    StaffRouterModule,\r\n    FlexLayoutModule,\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatCheckboxModule,\r\n    MatPaginatorModule,\r\n    MatProgressSpinnerModule,\r\n    MatIconModule,\r\n    MatTabsModule,\r\n    MatRadioModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatOptionModule,\r\n    MatStepperModule,\r\n    MatSortModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatMenuModule,\r\n    MatExpansionModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSliderModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    MatProgressBarModule,\r\n    HighlightJsModule.forRoot({\r\n      provide: HIGHLIGHT_JS,\r\n      useFactory: highlightJsFactory\r\n    }),\r\n    ],\r\n\r\n    declarations: [\r\n        StaffdetailsComponent,\r\n        EditdialogComponent,\r\n        AdddialogComponent,\r\n        DeletedialogComponent,\r\n        ProfileComponent\r\n    ],\r\n    entryComponents: [\r\n      EditdialogComponent,\r\n      AdddialogComponent,\r\n      DeletedialogComponent\r\n    ],\r\n    exports: [\r\n\r\n    ]\r\n})\r\nexport class StaffModule { }\r\n","import { StaffdetailsComponent } from './staffdetails/staffdetails.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProfileComponent } from './profile/profile.component';\r\n\r\nconst StaffRoutes: Routes = [\r\n   /*  { path: 'staffdetails', component:  StaffdetailsComponent , data: { animation: 'buttons' }}, */\r\n   { path: 'profile', component:  ProfileComponent , data: { animation: 'buttons' }},\r\n   { path: '', redirectTo: '/auth/dashboard', pathMatch: 'full'}\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(StaffRoutes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\n\r\nexport class StaffRouterModule {}\r\n","module.exports = \"\\n\\n<div fxLayout=\\\"column\\\"  class=\\\"components-container-gt-xs\\\"  [ngClass.xs]=\\\"'components-container-xs'\\\"  fxLayoutGap=\\\"20px\\\">\\n\\n  <div fxFlex class=\\\"table-component-holder mat-elevation-z4\\\">\\n    <mat-toolbar class=\\\"table-header\\\">\\n      <h1 class=\\\"mat-headline center-align\\\" >STAFF DETAILS</h1>\\n    </mat-toolbar>\\n   \\n        \\n    \\n    <div class=\\\"table-container\\\">\\n       \\n       <mat-paginator [pageSizeOptions]=\\\"[20, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n       <mat-form-field style=\\\"font-size: 14px; width: 90%; padding: 8px 24px 0\\\">\\n          <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\n        </mat-form-field> \\n       <mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">     \\n          <ng-container matColumnDef=\\\"Serial\\\">\\n              <mat-header-cell *matHeaderCellDef mat-sort-header>S/N</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let staffdetails\\\">{{ staffdetails.Serial }}</mat-cell>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"IDcard\\\">\\n              <mat-header-cell *matHeaderCellDef mat-sort-header>ID CARD</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let staffdetails\\\">{{ staffdetails.IDcard }}</mat-cell>\\n            </ng-container>\\n        \\n          <ng-container matColumnDef=\\\"Staffname\\\">\\n              <mat-header-cell *matHeaderCellDef mat-sort-header>STAFF NAME</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let staffdetails\\\">{{ staffdetails.Staffname }}</mat-cell>\\n            </ng-container>\\n          \\n            <ng-container matColumnDef=\\\"Conraiss\\\">\\n              <mat-header-cell *matHeaderCellDef mat-sort-header>CONRAISS</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let staffdetails\\\">{{ staffdetails.Conraiss }}</mat-cell>\\n            </ng-container>\\n          \\n            <ng-container matColumnDef=\\\"Department\\\">\\n              <mat-header-cell *matHeaderCellDef mat-sort-header>DEPARTMENT</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let staffdetails\\\">{{staffdetails.Department }}</mat-cell>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"Intercom\\\">\\n              <mat-header-cell *matHeaderCellDef mat-sort-header>INTERCOM NO</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let staffdetails\\\">{{staffdetails.Intercom }}</mat-cell>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"Email\\\">\\n              <mat-header-cell *matHeaderCellDef mat-sort-header>EMAIL</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let staffdetails\\\">{{staffdetails.Email }}</mat-cell>\\n            </ng-container>\\n\\n           \\n            <ng-container  matColumnDef=\\\"actions\\\" >\\n              <mat-header-cell *matHeaderCellDef>\\n                <div *ngIf=\\\"Roletype === 1\\\">\\n                <button mat-icon-button color=\\\"primary\\\" (click)=\\\"AddNew()\\\" >\\n                  <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\n                </button>   \\n              </div>\\n                <div *ngIf=\\\"Roletype === 2\\\">\\n                  <button mat-icon-button color=\\\"primary\\\" >\\n                   \\n                  </button>   \\n                </div>\\n                <div *ngIf=\\\"Roletype === 3\\\">\\n                  <button mat-icon-button color=\\\"primary\\\" >\\n                   \\n                  </button>   \\n                </div>\\n              </mat-header-cell> \\n        \\n              <mat-cell *matCellDef=\\\"let row; let i=index;\\\">\\n              <div *ngIf=\\\"Roletype === 1\\\">\\n                <button mat-icon-button color=\\\"primary\\\" (click)=\\\"StartEdit(i, row.Serial, row.IDcard, row.Staffname, row.Conraiss, row.Department, row.Intercom, row.Email)\\\">\\n                  <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\n                </button>\\n              </div>\\n              <div *ngIf=\\\"Roletype === 2\\\">\\n                  <button mat-icon-button color=\\\"accent\\\" >\\n                  \\n                  </button>\\n              </div>\\n              <div *ngIf=\\\"Roletype === 3\\\">\\n                <button mat-icon-button color=\\\"accent\\\" >\\n                \\n                </button>\\n            </div>\\n              <div *ngIf=\\\"Roletype === 1\\\">\\n                <button mat-icon-button color=\\\"accent\\\" (click)=\\\"StartDelete(i, row.Serial, row.IDcard, row.Staffname, row.Conraiss, row.Department, row.Intercom, row.Email)\\\">\\n                  <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\n                </button>\\n                </div>\\n                <div *ngIf=\\\"Roletype === 2\\\">\\n                 <button mat-icon-button color=\\\"accent\\\" >\\n                </button>\\n                 </div>\\n                 <div *ngIf=\\\"Roletype === 3\\\">\\n                  <button mat-icon-button color=\\\"accent\\\" >\\n                 </button>\\n                  </div>\\n\\n                 <div *ngIf=\\\"Roletype === 1\\\">\\n                  <button mat-icon-button color=\\\"green\\\" (click)=\\\"StartFlag(i, row.Serial, row.IDcard, row.Staffname, row.Conraiss, row.Department, row.Intercom, row.Email)\\\">\\n                    <mat-icon aria-label=\\\"Flag\\\">flag</mat-icon>\\n                  </button>\\n                  </div>\\n                  <div *ngIf=\\\"Roletype === 2\\\">\\n                   <button mat-icon-button color=\\\"accent\\\" >\\n                  </button>\\n                   </div>\\n                   <div *ngIf=\\\"Roletype === 3\\\">\\n                    <button mat-icon-button color=\\\"accent\\\" >\\n                   </button>\\n                    </div>\\n              </mat-cell>\\n            </ng-container>\\n\\n                       \\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n          </mat-table>\\n    \\n \\n  </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { DeletedialogComponent } from './../dialogs/deletedialog/deletedialog.component';\nimport { AdddialogComponent } from './../dialogs/adddialog/adddialog.component';\nimport { StaffService } from './../staff.service';\nimport { Component, OnInit, OnDestroy, ViewChild, AfterViewInit, ViewContainerRef } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Observable, Subscription } from 'rxjs';\nimport { StaffDetails } from '../staff.model';\nimport { Router } from '@angular/router';\nimport { MatTableDataSource, MatPaginator, MatSort, MatDialog } from '@angular/material';\nimport { ToastrService } from 'ngx-toastr';\nimport {DataSource} from '@angular/cdk/collections';\nimport { EditdialogComponent } from '../dialogs/editdialog/editdialog.component';\n\n@Component({\n  selector: 'app-staffdetails',\n  templateUrl: './staffdetails.component.html',\n  styleUrls: ['./staffdetails.component.scss']\n})\nexport class StaffdetailsComponent implements OnInit, AfterViewInit, OnDestroy {\n  Roletype: number;\n  staffdetails: StaffDetails[];\n  StaffDetailsSubscription: Subscription;\n  displayedColumns = ['Serial', 'IDcard', 'Staffname', 'Conraiss', 'Department', 'Intercom', 'Email', 'actions'];\n   dataSource: MatTableDataSource<StaffDetails>;\n\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n\n  constructor(private toastr: ToastrService,\n    private staffservice: StaffService,\n  private router: Router,\n  private dialog: MatDialog) {\n\n   }\n\n  ngOnInit() {\n    this.LoadStaffDetails();\n\n  }\n\n  showSuccess() {\n    this.toastr.success('New Staff Details Added Succesully');\n  }\n  showError() {\n    this.toastr.success('New Staff Not Added, Please try again');\n  }\n\n\n\n  LoadStaffDetails() {\n    this.staffservice.GetStaffdetails().subscribe\n    (result => {\n      this.dataSource = new MatTableDataSource(result);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }, error => console.error(error));\n\n    this.FilterEditandDelete();\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n  ngAfterViewInit() {\n\n  }\n\n\n  ngOnDestroy() {\n\n  }\n\n  FilterEditandDelete() {\n    if (localStorage.getItem('role') === '1') {\n      this.Roletype = 1;\n    } else if (localStorage.getItem('role') === '2') {\n      this.Roletype = 2;\n    } else if (localStorage.getItem('role') === '3') {\n      this.Roletype = 3;\n  }\n}\n\n  StartDelete(i: number, serial: number, idcard: string, staffname: string, conraiss: string, depertment: string,\n    intercom: string, email: string) {\n    const dialogref = this.dialog.open(DeletedialogComponent, {\n      data: {serial: serial, idcard: idcard, staffname: staffname, conraiss: conraiss, department: depertment,\n        intercom: intercom, email: email}\n      });\n  }\n\n  StartEdit(i: number, serial: number, idcard: string, staffname: string, conraiss: string, depertment: string,\n    intercom: string, email: string) {\n    const dialogref = this.dialog.open(EditdialogComponent, {\n    data: {serial: serial, idcard: idcard, staffname: staffname, conraiss: conraiss, department: depertment,\n      intercom: intercom, email: email}\n    });\n\n  }\n\n  StartFlag(i: number, serial: number, idcard: string, staffname: string, conraiss: string, depertment: string,\n    intercom: string, email: string) {\n    const dialogref = this.dialog.open(DeletedialogComponent, {\n      data: {serial: serial, idcard: idcard, staffname: staffname, conraiss: conraiss, department: depertment,\n        intercom: intercom, email: email}\n      });\n  }\n\nAddNew(details: StaffDetails) {\n const dialogref = this.dialog.open(AdddialogComponent, {data: {details: details}});\n\n dialogref.afterClosed().subscribe(data => {\n  this.LoadStaffDetails();\n});\n  }\n\n\n\n}\n"],"sourceRoot":""}