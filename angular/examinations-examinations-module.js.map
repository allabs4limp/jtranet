{"version":3,"sources":["webpack:///./src/app/examinations/dialog/viewdialog/viewdialog.component.css","webpack:///./src/app/examinations/dialog/viewdialog/viewdialog.component.html","webpack:///./src/app/examinations/dialog/viewdialog/viewdialog.component.ts","webpack:///./src/app/examinations/examinations.model.ts","webpack:///./src/app/examinations/examinations.module.ts","webpack:///./src/app/examinations/examinations.router.ts","webpack:///./src/app/examinations/eyewitness/eyewitness.component.css","webpack:///./src/app/examinations/eyewitness/eyewitness.component.html","webpack:///./src/app/examinations/eyewitness/eyewitness.component.ts","webpack:///./src/app/examinations/eyewitnessadmin/eyewitnessadmin.component.html","webpack:///./src/app/examinations/eyewitnessadmin/eyewitnessadmin.component.scss","webpack:///./src/app/examinations/eyewitnessadmin/eyewitnessadmin.component.ts","webpack:///./src/app/examinations/postings/postings.component.html","webpack:///./src/app/examinations/postings/postings.component.scss","webpack:///./src/app/examinations/postings/postings.component.ts","webpack:///./src/app/examinations/reg-report/reg-report.component.css","webpack:///./src/app/examinations/reg-report/reg-report.component.html","webpack:///./src/app/examinations/reg-report/reg-report.component.ts","webpack:///./src/app/examinations/reg-reportadmin/reg-reportadmin.component.html","webpack:///./src/app/examinations/reg-reportadmin/reg-reportadmin.component.scss","webpack:///./src/app/examinations/reg-reportadmin/reg-reportadmin.component.ts","webpack:///./src/app/examinations/sit-report/sit-report.component.css","webpack:///./src/app/examinations/sit-report/sit-report.component.html","webpack:///./src/app/examinations/sit-report/sit-report.component.ts","webpack:///./src/app/examinations/utme-centres/utme-centres.component.html","webpack:///./src/app/examinations/utme-centres/utme-centres.component.scss","webpack:///./src/app/examinations/utme-centres/utme-centres.component.ts"],"names":[],"mappings":"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","file":"examinations-examinations-module.js","sourcesContent":["module.exports = \".container {\\r\\n    display: float;\\r\\n    flex-direction: column;\\r\\n    width: 500px;\\r\\n  }\\r\\n  \\r\\n  .container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .form {\\r\\n    display: flex;\\r\\n    padding-top: 6px;\\r\\n  }\\r\\n  \\r\\n  .mat-form-field {\\r\\n    font-size: 16px;\\r\\n    flex-grow: 1;\\r\\n  }\\r\\n  \"","module.exports = \"<div class=\\\"container\\\">\\n    <h1 style=\\\"font-size: 16px;\\\" mat-dialog-title> {{ data.centrename}}</h1>\\n  \\n    <form  class=\\\"mat-dialog-content\\\" #formControl=\\\"ngForm\\\" (ngSubmit)=\\\"submit()\\\" >\\n  \\n      <div class=\\\"form\\\">\\n        <mat-form-field color=\\\"accent\\\">\\n          <input matInput  #inputsession class=\\\"form-control\\\" placeholder=\\\"Serial No\\\" [(ngModel)]=\\\"data.serialno\\\" name=\\\"serialno\\\" disabled >\\n        </mat-form-field>\\n      </div>\\n\\n   <!--    <div class=\\\"form\\\">\\n        <mat-form-field color=\\\"accent\\\">\\n          <input matInput #inputsession class=\\\"form-control\\\" placeholder=\\\"Session\\\" [(ngModel)]=\\\"data.session\\\" name=\\\"session\\\" disabled >\\n        </mat-form-field>\\n      </div> -->\\n  \\n      <!--Textarea for demo purposes-->\\n     <!--  <div class=\\\"form\\\">\\n        <mat-form-field color=\\\"accent\\\">\\n          <input matInput #inputcaller class=\\\"form-control\\\" placeholder=\\\"Caller\\\" [(ngModel)]=\\\"data.caller\\\" name=\\\"caller\\\" disabled >\\n        </mat-form-field>\\n      </div> -->\\n\\n      <div class=\\\"form\\\">\\n        <mat-form-field color=\\\"accent\\\">\\n          <input matInput #inputissuecategory class=\\\"form-control\\\" placeholder=\\\"Issue Category\\\" [(ngModel)]=\\\"data.issuecategory\\\" name=\\\"issuecategory\\\" [readonly]=\\\"true\\\">\\n        </mat-form-field>\\n      </div>\\n\\n      <div class=\\\"form\\\">\\n        <mat-form-field color=\\\"accent\\\">\\n          <textarea matInput #inputproblemdesc class=\\\"form-control\\\" placeholder=\\\"Problem Description\\\" [(ngModel)]=\\\"data.problemdesc\\\" name=\\\"problemdesc\\\" [readonly]=\\\"true\\\"></textarea>\\n        </mat-form-field>\\n      </div>\\n\\n      <div class=\\\"form\\\">\\n        <mat-form-field color=\\\"accent\\\">\\n          <textarea matInput #inputsolution class=\\\"form-control\\\" placeholder=\\\"Solution\\\" [(ngModel)]=\\\"data.solution\\\" name=\\\"solution\\\" [readonly]=\\\"true\\\"></textarea>\\n        </mat-form-field>\\n      </div>\\n  \\n      <!--Contains mat-hint for characters count and has maxLengt set-->\\n      <div class=\\\"form\\\">\\n        <mat-form-field color=\\\"accent\\\">\\n          <input matInput #inputloggedby class=\\\"form-control\\\" placeholder=\\\"Logged By\\\" [(ngModel)]=\\\"data.loggedby\\\" name=\\\"loggedby\\\" disabled required >\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"form\\\">\\n          <mat-form-field color=\\\"accent\\\">\\n            <input matInput #inputloggeddate class=\\\"form-control\\\" placeholder=\\\"Logged Date\\\" [(ngModel)]=\\\"data.loggeddate\\\" name=\\\"loggeddate\\\" disabled >\\n          </mat-form-field>\\n        </div>\\n  \\n      <div class=\\\"form\\\">\\n\\n          <mat-form-field color=\\\"accent\\\" >\\n              <mat-select [(ngModel)]=\\\"SelectedIssueCat\\\" ngModel name =\\\"issuestatus\\\"  required placeholder=\\\"Issue Status\\\">\\n                  <mat-option value=\\\"RESOLVED\\\">RESOLVED </mat-option>\\n                  <mat-option value=\\\"OPEN\\\">OPEN  </mat-option>\\n          <!--         <mat-option value=\\\"CLOSE\\\">CLOSE  </mat-option> -->\\n                  <mat-option value=\\\"TRANSFERRED\\\">TRANSFERRED  </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n      </div>\\n\\n  \\n      <div mat-dialog-actions>\\n        <button mat-button  [type]=\\\"submit\\\"  (click)=\\\"stopEdit()\\\">Update</button>\\n      </div>\\n    </form>\\n  </div>\\n  \"","import { ExaminationService } from './../../examinations.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, Validators, FormGroup, NgForm, FormBuilder} from '@angular/forms';\nimport { load } from '../../../../../node_modules/@angular/core/src/render3/instructions';\nimport { NgModule } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-viewdialog',\n  templateUrl: './viewdialog.component.html',\n  styleUrls: ['./viewdialog.component.css']\n})\nexport class ViewdialogComponent implements OnInit {\n  UpdateReport: FormGroup;\n  Updateform: NgForm;\n  SelectedIssueCat: any;\n  loggedby: string;\n\n  constructor(public dialogRef: MatDialogRef<ViewdialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any, public examinationservice: ExaminationService,\n    private toastr: ToastrService, private formbuilder: FormBuilder) {\n\n\n    }\n\n  ngOnInit() {\n    this.loggedby = localStorage.getItem('profilename');\n    this.UpdateReport = this.formbuilder.group({\n     SerialNo: [this.data.serialno, Validators.required],\n     /*   Session: [this.data.session, Validators.required],\n       Caller: [this.data.caller, Validators.required], */\n       IssueCategory: [this.data.issuecategory, Validators.required],\n       LoggedBy: [this.data.loggedby, Validators.required],\n       LoggedDate: [this.data.loggeddate, Validators.required],\n});\n  }\n\n  submit() {\n    console.log(this.UpdateReport.value);\n    console.log( this.SelectedIssueCat);\nthis.examinationservice.UpdateRegistration(this.UpdateReport.value, this.SelectedIssueCat)\n.subscribe(result => {\n  this.showSuccess();\n  this.examinationservice.GetUTMERegistration(this.loggedby);\n  this.dialogRef.close();\n},\nerror => {\n  this.showError();\n});\n}\n\nshowSuccess() {\n  this.toastr.success('Updated Succesfully');\n}\nshowError() {\n  this.toastr.error('Update Failed, Please try again');\n}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  stopEdit(): void {\n\n  }\n\n\n}\n","export interface UtmeCentres {\r\n    StateId: number;\r\n    StateName: string;\r\n    CentreId: string;\r\n    ExamTown: string;\r\n    CentreName: string;\r\n}\r\n\r\nexport interface PostingDetails {\r\n    StateName: string;\r\n    ExamTown: string;\r\n    CentreName: string;\r\n    IDcard: string;\r\n    Staffname: string;\r\n    Conraiss: number;\r\n    Description: string;\r\n    Phone: string;\r\n    DeptName: string;\r\n    TwnCode: string;\r\n}\r\n\r\nexport interface OtherPostingDetails {\r\n    StateName: string;\r\n    ExamTown: string;\r\n    CentreName: string;\r\n    IDcard: string;\r\n    Staffname: string;\r\n    Conraiss: number;\r\n    Description: string;\r\n    Phone: string;\r\n    DeptName: string;\r\n    TwnCode: string;\r\n}\r\nexport interface SituationReport {\r\n    SerialNo: number;\r\n    CentreID: string;\r\n    StateName: string;\r\n    CentreName: string;\r\n    Session: string;\r\n    Caller: string;\r\n    IssueCategory: string;\r\n    ProblemDesc: string;\r\n    Solution: string;\r\n    IssueStatus: string;\r\n    LoggedBy: string;\r\n    LoggedDate: string;\r\n}\r\n\r\nexport interface RegistrationReport {\r\n    SerialNo: number;\r\n    Refnum: string;\r\n    CentreID: string;\r\n    CentreName: string;\r\n    IssueCategory: string;\r\n    ProblemDesc: string;\r\n    Solution: string;\r\n    IssueStatus: string;\r\n    LoggedBy: string;\r\n    LoggedDate: string;\r\n}\r\n\r\nexport interface EyeWitnessReport {\r\n    SerialNo: number;\r\n    CentreName: string;\r\n    ProblemDesc: string;\r\n    Filename: string;\r\n    LoggedBy: string;\r\n    LoggedDate: string;\r\n}\r\n\r\nexport interface State {\r\n    StateId: number;\r\n    StateName: string;\r\n}\r\n\r\nexport class Statess {\r\n    constructor(public StateIds: number, public StateNames: string) {\r\n\r\n    }\r\n}\r\n\r\n","import { UtmeCentresComponent } from './utme-centres/utme-centres.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport { MatProgressSpinnerModule,\r\n         MatRadioModule,\r\n         MatSliderModule,\r\n         MatPaginatorModule,\r\n         MatCardModule,\r\n         MatTableModule,\r\n         MatAutocompleteModule,\r\n         MatCheckboxModule,\r\n         MatSlideToggleModule,\r\n         MatSelectModule,\r\n         MatProgressBarModule,\r\n         MatMenuModule,\r\n\r\n } from '@angular/material';\r\n import * as hljs from 'highlight.js';\r\nimport { HighlightJsModule, HIGHLIGHT_JS } from 'angular-highlight-js';\r\nimport * as hljsTypescript from 'highlight.js/lib/languages/typescript';\r\n\r\n import { ExaminationRouterModule } from './examinations.router';\r\nimport { PostingsComponent } from './postings/postings.component';\r\nimport { SitReportComponent } from './sit-report/sit-report.component';\r\nimport { ViewdialogComponent } from './dialog/viewdialog/viewdialog.component';\r\nimport { RegReportComponent } from './reg-report/reg-report.component';\r\nimport { RegReportadminComponent } from './reg-reportadmin/reg-reportadmin.component';\r\nimport { EyewitnessComponent } from './eyewitness/eyewitness.component';\r\n export function highlightJsFactory(): any {\r\n    hljs.registerLanguage('typescript', hljsTypescript);\r\n    return hljs;\r\n  }\r\n  import {FileUploadModule} from 'ng2-file-upload';\nimport { EyewitnessadminComponent } from './eyewitnessadmin/eyewitnessadmin.component';\r\n\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n    CommonModule,\r\n    ExaminationRouterModule,\r\n    FlexLayoutModule,\r\n    FileUploadModule,\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatPaginatorModule,\r\n    MatProgressSpinnerModule,\r\n    MatIconModule,\r\n    MatTabsModule,\r\n    MatRadioModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatStepperModule,\r\n    MatSortModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatMenuModule,\r\n    MatExpansionModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSliderModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    MatProgressBarModule,\r\n    HighlightJsModule.forRoot({\r\n      provide: HIGHLIGHT_JS,\r\n      useFactory: highlightJsFactory\r\n    }),\r\n    ],\r\n\r\n    declarations: [\r\n        UtmeCentresComponent,\r\n        PostingsComponent,\r\n        SitReportComponent,\r\n        ViewdialogComponent,\r\n        RegReportComponent,\r\n        RegReportadminComponent,\r\n        EyewitnessComponent,\r\n        EyewitnessadminComponent,\r\n    ],\r\n    entryComponents: [\r\n      ViewdialogComponent\r\n    ],\r\n    exports: [\r\n      FileUploadModule\r\n    ]\r\n})\r\nexport class ExaminationModule { }\r\n","import { RegReportadminComponent } from './reg-reportadmin/reg-reportadmin.component';\r\nimport { SitReportComponent } from './sit-report/sit-report.component';\r\nimport { PostingsComponent } from './postings/postings.component';\r\nimport { UtmeCentresComponent } from './utme-centres/utme-centres.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RegReportComponent } from './reg-report/reg-report.component';\r\nimport { EyewitnessComponent } from './eyewitness/eyewitness.component';\r\nimport { EyewitnessadminComponent } from './eyewitnessadmin/eyewitnessadmin.component';\r\n\r\n\r\nconst ExaminationRoutes: Routes = [\r\n   { path: 'utmecentres', component:  UtmeCentresComponent , data: { animation: 'buttons' }},\r\n    { path: 'postings', component:  PostingsComponent , data: { animation: 'buttons' }},\r\n    {path: 'sitreport', component: SitReportComponent, data: { animation: 'buttons' }},\r\n    {path: 'regreport', component: RegReportComponent, data: { animation: 'buttons' }},\r\n    {path: 'regreportadmin', component: RegReportadminComponent, data: { animation: 'buttons' }},\r\n    {path: 'eyewitness', component: EyewitnessComponent, data: {animation: 'buttons'}},\r\n    {path: 'eyewitadm', component: EyewitnessadminComponent, data: {animation: 'buttons'}},\r\n    {path: '', redirectTo: '/auth/dashboard', pathMatch: 'full'}\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(ExaminationRoutes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\n\r\nexport class ExaminationRouterModule {}\r\n","module.exports = \".header-section{\\r\\n    height: 80px;\\r\\n    line-height: 80px;\\r\\n    color: beige;\\r\\n    background-color: rgb(46, 43, 43);\\r\\n    font-size: 24px;\\r\\n    padding-left: 20px;\\r\\n}\\r\\n\\r\\n.card{\\r\\n    background-color: white;\\r\\n    box-shadow:0 3px 5px -1px rgba(0,0,0,.2), 0 6px 10px 0 rgba(0,0,0,.14), 0 1px 18px 0 rgba(0,0,0,.12);\\r\\n    color:black;\\r\\n    margin: 20px;\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\n.uploadList{\\r\\n    padding: 10px;\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 10px;\\r\\n}\"","module.exports = \"\\n<div fxLayout=\\\"column\\\"  class=\\\"components-container-gt-xs\\\"  [ngClass.xs]=\\\"'components-container-xs'\\\"  fxLayoutGap=\\\"20px\\\">\\n\\n  <div fxFlex class=\\\"datepicker-component-holder mat-elevation-z4\\\">\\n    <mat-toolbar class=\\\"table-header\\\">\\n      <h1 class=\\\"mat-headline center-align\\\">UPLOAD EYE WITNESS</h1>\\n    </mat-toolbar>\\n\\n     \\n        <div class=\\\"container-fluid\\\">\\n            <div class=\\\"row header-section\\\">\\n                <span> File Upload </span>\\n            </div>\\n        \\n            <div class=\\\"row\\\">\\n              <!--   <div class=\\\"col-md-2\\\"></div> -->\\n                <div class=\\\"col-md-12\\\">\\n                    <div class=\\\"row card\\\">\\n                        <div class=\\\"container-fluid\\\">\\n           \\n                            <div class=\\\"row\\\">\\n                              <!--   <div class=\\\"col-md-2\\\"></div> -->\\n                                <div class=\\\"col-md-12\\\">\\n                               \\n                                 <div class=\\\"row card\\\">\\n                                    <form [formGroup]=\\\"LogFormgroup\\\" (ngSubmit)=\\\"SubmitLog()\\\" #LogForm=\\\"ngForm\\\">\\n                                                          \\n                                     \\n                                     <div class=\\\"row\\\" style=\\\"text-align:center;\\\">\\n                                        <mat-form-field  color=\\\"accent\\\" >\\n                                          <mat-select placeholder=\\\"STATE\\\" formControlName=\\\"LogState\\\" (selectionChange)=\\\"LoadCentres($event.value)\\\" name=\\\"logstate\\\"  required >  \\n                                          <mat-option *ngFor=\\\"let stat of state\\\" [value]=\\\"stat.StateName\\\"> {{stat.StateName}} </mat-option>\\n                                          </mat-select>\\n                                         <mat-hint style=\\\"color: blue\\\">Select State</mat-hint>\\n                                      </mat-form-field>\\n                                     </div>\\n                                     <br>                                    \\n                                      <div class=\\\"row\\\" style=\\\"text-align:center;\\\">\\n                                        <mat-form-field  style=\\\"width:500px !important\\\"  color=\\\"accent\\\" >\\n                                          <mat-select placeholder=\\\"CENTRE\\\" ngModel formControlName=\\\"LogCentre\\\" name=\\\"logcentre\\\"  required >  \\n                                            <mat-option *ngFor=\\\"let centre of DisplayedCentres\\\" [value]=\\\"centre.CentreName\\\">{{centre.CentreName}}</mat-option>\\n                                           </mat-select>\\n                                         <mat-hint style=\\\"color: blue\\\">Select Centre</mat-hint>\\n                                      </mat-form-field>\\n                                     </div>\\n                                                 \\n                                 <br>\\n                                 <div class=\\\"row\\\" style=\\\"text-align:center;\\\">\\n                                  <mat-form-field  style=\\\"width:500px !important\\\"  color=\\\"accent\\\" >\\n                                    <textarea matInput placeholder=\\\"PROBLEM DESCRIPTION\\\" ngModel formControlName=\\\"LogProblem\\\" name=\\\"logproblem\\\"  required >  \\n                  \\n                                     </textarea>\\n                                   <mat-hint style=\\\"color: blue\\\">Little explanation of the attached document</mat-hint>\\n                                </mat-form-field>\\n                               </div>\\n                               <br>\\n                               <div class=\\\"col-sm-12\\\">\\n                                  <h4>Upload File(s)</h4>\\n                                  <div id=\\\"fileSelector\\\">\\n                                      <input type=\\\"file\\\" name=\\\"fileUpload\\\" id=\\\"fileUpload\\\"\\n                                      multiple ng2FileSelect [uploader]=\\\"uploader\\\">\\n                                  </div>\\n                                  <div>\\n                                      <div class=\\\"row uploadList\\\" *ngFor=\\\"let item of uploader.queue\\\">\\n                                          <div class=\\\"col-sm-4\\\">{{item.file.name}}</div>\\n                                          <div class=\\\"col-sm-4\\\">\\n                                              <div class=\\\"progress\\\">\\n                                                  <div class=\\\"progress-bar bg-success\\\" \\n                                                  [ngStyle]=\\\"{'width':item.progress+'%'}\\\"></div>\\n                                              </div>\\n                                          </div>\\n                                          <div class=\\\"col-sm-4\\\">\\n                                                  <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"item.upload()\\\">Upload</button>\\n                                                  <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"item.remove()\\\">Cancel</button>\\n                                          </div>\\n                                      </div>                        \\n                                  </div>\\n                                  <div class=\\\"row\\\" *ngIf=\\\"uploader?.queue?.length > 0\\\">\\n                                          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"uploader.uploadAll()\\\">Upload All</button>\\n                                          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"uploader.clearQueue()\\\">Clear All</button>\\n                                  </div>\\n                              </div>  \\n  \\n                                </form>                                    \\n                                    </div> \\n                                </div>\\n                              <!--   <div class=\\\"col-md-2\\\"></div> -->\\n                            </div>\\n                        </div>\\n                     \\n                        \\n                        \\n                    </div>\\n        \\n                \\n                </div>\\n           <!--      <div class=\\\"col-md-2\\\"></div> -->\\n            </div>\\n        </div>\\n\\n\\n\\n\\n\\n    \\n\\n  </div>\\n</div>\\n\"","import { UtmeCentres, Statess, State } from './../examinations.model';\nimport { Globals } from './../../Globals';\nimport { Component, OnInit, ɵConsole } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\nimport { FileSelectDirective, FileUploader} from 'ng2-file-upload';\nimport {saveAs} from 'file-saver';\nimport { UploadsService } from '../../uploads/uploads.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { ExaminationService } from '../examinations.service';\n\n\n\n\n@Component({\n  selector: 'app-eyewitness',\n  templateUrl: './eyewitness.component.html',\n  styleUrls: ['./eyewitness.component.css']\n})\nexport class EyewitnessComponent implements OnInit {\n  state: State[];\n  selectedstate: Statess = new Statess (1, 'ABIA');\n  centres: UtmeCentres[];\n  StoredCentres: UtmeCentres[];\n  DisplayedCentres: UtmeCentres[];\n  loggedby: string;\n  LogFormgroup: FormGroup;\n  filename: any;\n\n  readonly uri = 'http://' + this.globals.ipaddress + ':3000/uploads/uploadEyewitness';\n\n  uploader = new FileUploader({url: this.uri});\n\n    attachmentList: any = [];\n\n\n  constructor(private _fileService: UploadsService,\n    private globals: Globals, private _formBuilder: FormBuilder, private toastr: ToastrService,\n    private examinationservice: ExaminationService) {\n\n     this.uploader.onCompleteItem = (item: any, response: any , status: any, headers: any) => {\n      this.attachmentList.push(JSON.parse(response));\n      this.filename = item.file.name;\n      this.SubmitLog();\n  };\n\n  }\n\nngOnInit() {\n  this.loggedby = localStorage.getItem('profilename');\n  this.LoadState();\n  this.LoadCentre();\n\n\n  this.LogFormgroup = this._formBuilder.group({\n    LogState: ['', Validators.required],\n    LogCentre: ['', Validators.required],\n    LogProblem: ['', Validators.required],\n  });\n}\n\nSubmitLog() {\n  this.examinationservice.InsertEyeWitnessReport(this.LogFormgroup.value, this.loggedby, this.filename).subscribe(result => {\n    this.showSuccess();\n    },\n    error => {\n      this.showError();\n    });\n\n}\n\nshowSuccess() {\n  this.toastr.success('Uploaded Succesfully');\n}\nshowError() {\n  this.toastr.error('Update Failed, Please try again');\n}\n\nLoadState() {\n  this.examinationservice.GetUTMEState().subscribe(\n    result => {this.state = result; },\n    error => console.error(error));\n}\n\nLoadCentre() {\n  this.examinationservice.GetRegistrationCentres().subscribe(\n    result => {this.StoredCentres = result; },\n    error => console.error(error));\n}\n\n  LoadCentres(stat) {\n    this.DisplayedCentres = this.StoredCentres.filter((item) => item.StateName === stat);\n  }\n\n\n}\n","module.exports = \"\\n<div fxLayout=\\\"column\\\"  class=\\\"components-container-gt-xs\\\"  [ngClass.xs]=\\\"'components-container-xs'\\\"  fxLayoutGap=\\\"20px\\\">\\n\\n    <div fxFlex class=\\\"datepicker-component-holder mat-elevation-z4\\\">\\n     \\n       <div class=\\\"container-fluid\\\">     \\n            <div class=\\\"row\\\">\\n              <!--   <div class=\\\"col-md-2\\\"></div> -->\\n                <div class=\\\"col-md-12\\\">\\n               \\n                 <div class=\\\"row card\\\">\\n                  <div fxFlex class=\\\"table-component-holder mat-elevation-z4\\\">\\n                    <mat-toolbar class=\\\"table-header\\\">\\n                      <h1 class=\\\"mat-headline center-align\\\" >EYE WITNESS REPORTS</h1>\\n                    </mat-toolbar>\\n                          \\n                    \\n                    <div class=\\\"table-container\\\">\\n                       \\n                       <mat-paginator [pageSizeOptions]=\\\"[10, 50, 100, 500]\\\" showFirstLastButtons></mat-paginator>\\n                     \\n                     \\n                       <mat-form-field style=\\\"font-size: 14px; width: 90%; padding: 8px 24px 0\\\">\\n                          \\n                        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\n                        </mat-form-field> \\n                       <mat-table [dataSource]=\\\"dataSource\\\"  matSort class=\\\"mat-elevation-z8\\\">\\n                          <ng-container matColumnDef=\\\"SerialNo\\\" >\\n                              <mat-header-cell style=\\\"flex: 0 0 8%;;\\\" *matHeaderCellDef mat-sort-header>S/N</mat-header-cell>\\n                              <mat-cell style=\\\"font-size: 10px; flex: 0 0 8%;\\\" *matCellDef=\\\"let registrationreport\\\">{{ registrationreport.SerialNo }}</mat-cell>\\n                            </ng-container>\\n                         <!--  <ng-container matColumnDef=\\\"Refnum\\\" >\\n                              <mat-header-cell style=\\\"flex: 0 0 15%;;\\\" *matHeaderCellDef mat-sort-header>Refnum</mat-header-cell>\\n                              <mat-cell style=\\\"font-size: 10px; flex: 0 0 15%;\\\" *matCellDef=\\\"let registrationreport\\\">{{ registrationreport.Refnum }}</mat-cell>\\n                            </ng-container> -->\\n  \\n                            <ng-container matColumnDef=\\\"StateName\\\">\\n                              <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef mat-sort-header>STATE NAME</mat-header-cell>\\n                              <mat-cell style=\\\"font-size: 10px; flex: 0 0 13%;\\\" *matCellDef=\\\"let registrationreport\\\">{{registrationreport.StateName }}</mat-cell>\\n                            </ng-container>\\n                          \\n                            <ng-container matColumnDef=\\\"CentreName\\\">\\n                              <mat-header-cell style=\\\"flex: 0 0 30%;\\\" *matHeaderCellDef mat-sort-header>CENTRE NAME</mat-header-cell>\\n                              <mat-cell style=\\\"font-size: 10px; flex: 0 0 30%;\\\" *matCellDef=\\\"let registrationreport\\\">{{registrationreport.CentreName }}</mat-cell>\\n                            </ng-container>\\n                          \\n                           \\n  \\n                    \\n                            <ng-container matColumnDef=\\\"ProblemDesc\\\">\\n                              <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef mat-sort-header>PROBLEM</mat-header-cell>\\n                              <mat-cell style=\\\"font-size: 10px; flex: 0 0 13%;\\\" *matCellDef=\\\"let registrationreport\\\" [ngClass]=\\\"{'green': cell == solved}\\\">{{registrationreport.ProblemDesc }}</mat-cell>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"Filename\\\">\\n                                <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef mat-sort-header>File Name</mat-header-cell>\\n                                <mat-cell style=\\\"font-size: 10px; flex: 0 0 13%;\\\" *matCellDef=\\\"let registrationreport\\\" [ngClass]=\\\"{'green': cell == solved}\\\">{{registrationreport.Filename }}</mat-cell>\\n                              </ng-container>\\n  \\n                           <!--  <ng-container matColumnDef=\\\"LoggedBy\\\">\\n                              <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef mat-sort-header>LOGGED BY</mat-header-cell>\\n                              <mat-cell style=\\\"font-size: 10px; flex: 0 0 13%;\\\" *matCellDef=\\\"let registrationreport\\\">{{registrationreport.LoggedBy }}</mat-cell>\\n                            </ng-container> -->\\n  \\n                            <ng-container matColumnDef=\\\"LoggedDate\\\">\\n                              <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef mat-sort-header>LOGGED DATE</mat-header-cell>\\n                              <mat-cell style=\\\"font-size: 10px; flex: 0 0 13%;\\\" *matCellDef=\\\"let registrationreport\\\">{{registrationreport.LoggedDate | date }}</mat-cell>\\n                            </ng-container>\\n  \\n                            <ng-container  matColumnDef=\\\"actions\\\" >\\n                                <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef>ACTIONS</mat-header-cell>\\n                                <mat-cell *matCellDef=\\\"let row; let i=index;\\\" >\\n                                  <div class=\\\"row\\\" >\\n                                    <div style=\\\"text-align:center;\\\"><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"download(i)\\\">Download</button></div>\\n                                 </div>\\n                                  \\n                                </mat-cell>\\n                              </ng-container>\\n                          \\n                                       \\n                            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n                            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n                          </mat-table>\\n                    \\n                 \\n                  </div>\\n                  </div>\\n                       \\n                   \\n                    \\n                    </div> \\n                </div>\\n              <!--   <div class=\\\"col-md-2\\\"></div> -->\\n            </div>\\n        </div>\\n  \\n  \\n  \\n  \\n  \\n  \\n      \\n  \\n    </div>\\n  </div>\\n  \"","module.exports = \"\"","import { DownloadModel } from './../../downloads/downloads.model';\nimport { AppService } from './../../app.service';\nimport { ViewdialogComponent } from './../dialog/viewdialog/viewdialog.component';\nimport { ExaminationService } from './../examinations.service';\nimport { SituationReport, State, UtmeCentres, Statess, RegistrationReport, EyeWitnessReport } from './../examinations.model';\nimport { Component, OnInit, OnDestroy, ViewChild, AfterViewInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatTableDataSource, MatPaginator, MatSort, MatDialog } from '@angular/material';\n import {DataSource} from '@angular/cdk/collections';\nimport { Session } from 'protractor';\nimport { DownloadsService } from '../../downloads/downloads.service';\nimport {saveAs} from 'file-saver';\n\n@Component({\n  selector: 'app-eyewitnessadmin',\n  templateUrl: './eyewitnessadmin.component.html',\n  styleUrls: ['./eyewitnessadmin.component.scss']\n})\nexport class EyewitnessadminComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  eyewitnessreport: EyeWitnessReport[];\n  state: State[];\n  selectedstate: Statess = new Statess (1, 'ABIA');\n  centres: UtmeCentres[];\n  StoredCentres: UtmeCentres[];\n  loggedby: string;\n  renderedData: any;\n  attachmentList: any = [];\n  fileData: DownloadModel[];\n\n /*  displayedColumns = ['CentreID', 'CentreName', 'Session', 'Caller', 'IssueCategory', 'IssueStatus', 'LoggedBy', 'LoggedDate']; */\n  displayedColumns = ['SerialNo', 'StateName', 'CentreName', 'ProblemDesc', 'Filename', 'LoggedDate', 'actions'];\n\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  LogFormgroup: FormGroup;\n  dataSource: MatTableDataSource<EyeWitnessReport>;\n\n  constructor(private _formBuilder: FormBuilder, private _fileService: DownloadsService, private toastr: ToastrService,\n    private examinationservice: ExaminationService, private exelservice: AppService,\n    private dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.loggedby = localStorage.getItem('profilename');\n    this.LoadEyeWitnessReport();\n  }\n\n\n  LoadEyeWitnessReport() {\n    this.examinationservice.GetAllEyeWitnessReport().subscribe(\n      result => {\n        this.eyewitnessreport = result;\n        this.dataSource = new MatTableDataSource(result);\n        this.dataSource.connect().subscribe(res => this.renderedData = res);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort; },\n      error => console.error(error));\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  download(index) {\n    const filename = this.eyewitnessreport[index].Filename;\n    console.log(filename);\n     this._fileService.downloadEyeWitnessFile(filename)\n    .subscribe(\n        data => saveAs(data, filename),\n        error => console.error(error)\n    );\n  }\n\n  getPageSizeOptions(): number[] {\n    return [5, 10, 20, this.dataSource.data.length];\n  }\n\n  showSuccess() {\n    this.toastr.success('Updated Succesfully');\n  }\n  showError() {\n    this.toastr.error('Update Failed, Please try again');\n  }\n\n  ngAfterViewInit() {\n\n  }\n\n    ngOnDestroy() {\n\n    }\n\n}\n","module.exports = \"\\n\\n<div fxLayout=\\\"column\\\"  class=\\\"components-container-gt-xs\\\"  [ngClass.xs]=\\\"'components-container-xs'\\\"  fxLayoutGap=\\\"20px\\\">\\n\\n  <div fxFlex class=\\\"datepicker-component-holder mat-elevation-z4\\\">\\n    <mat-toolbar class=\\\"table-header\\\">\\n      <h1 class=\\\"mat-headline center-align\\\" >POSTINGS</h1>\\n    </mat-toolbar>\\n\\n    <div class=\\\"datepicker-container\\\">\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutGap=\\\"20px\\\">\\n    <div fxFlex.xs=\\\"100\\\" fxFlex.lg=\\\"100\\\" fxFlex.md=\\\"100\\\" fxFlex.sm=\\\"100\\\" >\\n      <h4  class=\\\"mat-subheading-2 center-align\\\">PERSONAL POSTING</h4>\\n      <mat-divider></mat-divider>\\n      <div *ngFor=\\\"let postdet of postingdetails\\\">\\n        <label style=\\\"font-style:normal; color: crimson\\\">TOWN CODE:-  </label> {{postdet.TwnCode }}\\n      </div>\\n      <mat-divider></mat-divider>\\n      <div *ngFor=\\\"let postdet of postingdetails\\\">\\n          <label style=\\\"font-style:normal; color: crimson\\\">TOWN NAME:-  </label> {{postdet.ExamTown }}\\n        </div>\\n        <mat-divider></mat-divider>\\n        <div *ngFor=\\\"let postdet of postingdetails\\\">\\n            <label style=\\\"font-style:normal; color: crimson\\\">STATE NAME:-  </label> {{postdet.StateName }}\\n          </div>\\n          <mat-divider></mat-divider>\\n          <div *ngFor=\\\"let postdet of postingdetails\\\">\\n              <label  style=\\\"font-style:normal; color: crimson\\\">CENTRE NAME:-  </label> {{postdet.CentreName }}\\n            </div>\\n            <mat-divider></mat-divider>\\n\\n            <div *ngFor=\\\"let postdet of postingdetails\\\">\\n                <label style=\\\"font-style:normal; color: crimson\\\">STATUS:-  </label> {{postdet.Description }}\\n              </div>\\n              <mat-divider></mat-divider>\\n            </div>\\n    </div>\\n    <div fxFlex.xs=\\\"100\\\" fxFlex.lg=\\\"100\\\" fxFlex.md=\\\"100\\\" fxFlex.sm=\\\"100\\\" >\\n      <h4  class=\\\"mat-subheading-2 center-align\\\">TEAM TO WORK WITH</h4>\\n      <mat-divider></mat-divider>\\n      <div>\\n        <ul *ngFor=\\\"let otherposting of otherpostingdetails\\\">\\n          <li> {{ otherposting.IDcard}} | {{otherposting.Staffname}} | {{otherposting.Conraiss}} | {{otherposting.DeptName}} | {{otherposting.Description}} | {{otherposting.Phone}} </li>\\n          <mat-divider></mat-divider>\\n        </ul>\\n       </div>\\n      <mat-divider></mat-divider>\\n     \\n\\n    </div>\\n        </div>\\n    \\n\\n  </div>\\n</div>\\n\"","module.exports = \".datepicker-header {\\n  background-color: #327ebd;\\n  color: white;\\n  padding: 0 5px; }\\n\\n.datepicker-container {\\n  padding: 5px 15px 15px 15px; }\\n\\n.datepicker-component-holder {\\n  border: 1px solid #327ebd;\\n  background-color: white; }\\n\\n.datepicker-component-holder h4 {\\n    color: #327ebd;\\n    margin: 14px 0; }\\n\\n.datepicker-component-holder mat-divider {\\n    margin-bottom: 30px; }\\n\"","import { PostingDetails, OtherPostingDetails } from './../examinations.model';\nimport { ExaminationService } from './../examinations.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-postings',\n  templateUrl: './postings.component.html',\n  styleUrls: ['./postings.component.scss']\n})\n\nexport class PostingsComponent implements OnInit {\n  idcard: any;\n  postingdetails: PostingDetails[];\n  otherpostingdetails: OtherPostingDetails[];\n  twncode: any;\n\n  constructor(private examinationservice: ExaminationService,  private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.idcard = localStorage.getItem('idcard');\n    this.LoadPostingDetails();\n  }\n\n  showSuccess() {\n    this.toastr.success('');\n  }\n\n  showError() {\n    this.toastr.error('Sorry, You have not been posted');\n  }\n\n\n  LoadPostingDetails() {\n    this.examinationservice.GetPostings(this.idcard).subscribe\n    (result => { this.postingdetails = result;\n      if (result != null) {\n        this.LoadOtherPostingDetails(this.postingdetails[0].TwnCode);\n      } else {\n        this.showError();\n      }\n    }, error => {\n      this.showError();\n    });\n  }\n\n\n  LoadOtherPostingDetails(twncod: any) {\n    this.examinationservice.GetPostingsOthers(this.idcard, twncod).subscribe\n    (result => { this.otherpostingdetails = result;\n    }, error => {\n      this.showError();\n    });\n\n  }\n}\n","module.exports = \".header-section{\\r\\n    height: 80px;\\r\\n    line-height: 80px;\\r\\n    color: beige;\\r\\n    background-color: rgb(46, 43, 43);\\r\\n    font-size: 24px;\\r\\n    padding-left: 20px;\\r\\n}\\r\\n\\r\\n.card{\\r\\n    background-color: white;\\r\\n    box-shadow:0 3px 5px -1px rgba(0,0,0,.2), 0 6px 10px 0 rgba(0,0,0,.14), 0 1px 18px 0 rgba(0,0,0,.12);\\r\\n    color:black;\\r\\n    margin: 20px;\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\n.uploadList{\\r\\n    padding: 10px;\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.main-div{\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n  }\"","module.exports = \"\\n<div fxLayout=\\\"column\\\"  class=\\\"components-container-gt-xs\\\"  [ngClass.xs]=\\\"'components-container-xs'\\\"  fxLayoutGap=\\\"20px\\\">\\n\\n  <div fxFlex class=\\\"datepicker-component-holder mat-elevation-z4\\\">\\n    <mat-toolbar class=\\\"table-header\\\">\\n      <h1 class=\\\"mat-headline center-align\\\">UTME REGISTRATION HELP LINE LOG</h1>\\n    </mat-toolbar>\\n    \\n\\n     \\n        <div class=\\\"container-fluid\\\">\\n           \\n            <div class=\\\"row\\\">\\n              <!--   <div class=\\\"col-md-2\\\"></div> -->\\n                <div class=\\\"col-md-12\\\">\\n               \\n                 <div class=\\\"row card\\\">\\n                    <form [formGroup]=\\\"LogFormgroup\\\" (ngSubmit)=\\\"SubmitLog()\\\" #LogForm=\\\"ngForm\\\">\\n                                          \\n                     \\n                     <div class=\\\"row\\\" style=\\\"text-align:center;\\\">\\n                        <mat-form-field  color=\\\"accent\\\" >\\n                          <mat-select placeholder=\\\"STATE\\\" formControlName=\\\"LogState\\\" (selectionChange)=\\\"LoadCentres($event.value)\\\" name=\\\"logstate\\\"  required >  \\n                          <mat-option *ngFor=\\\"let stat of state\\\" [value]=\\\"stat.StateName\\\"> {{stat.StateName}} </mat-option>\\n                          </mat-select>\\n                         <mat-hint style=\\\"color: blue\\\">Select State</mat-hint>\\n                      </mat-form-field>\\n                     </div>\\n                     <br> \\n                    \\n                      <div class=\\\"row\\\" style=\\\"text-align:center;\\\">\\n                        <mat-form-field  style=\\\"width:500px !important\\\"  color=\\\"accent\\\" >\\n                          <mat-select placeholder=\\\"CENTRE\\\" ngModel formControlName=\\\"LogCentre\\\" name=\\\"logcentre\\\"  required >  \\n                            <mat-option *ngFor=\\\"let centre of DisplayedCentres\\\" [value]=\\\"centre.CentreName\\\">{{centre.CentreName}}</mat-option>\\n                           </mat-select>\\n                         <mat-hint style=\\\"color: blue\\\">Select Centre</mat-hint>\\n                      </mat-form-field>\\n                     </div>\\n                     <br>\\n                    \\n                   <div class=\\\"row\\\" style=\\\"text-align:center;\\\">\\n                    <mat-form-field  style=\\\"width:500px !important\\\"  color=\\\"accent\\\" >\\n                      <mat-select placeholder=\\\"ISSUE CATEGORY\\\" ngModel formControlName=\\\"LogIssueCategory\\\" name=\\\"logissuecategory\\\"  required >  \\n                        <mat-option value=\\\"NETWORK\\\">NETWORK </mat-option>\\n                        <mat-option value=\\\"APPLICATION\\\">APPLICATION  </mat-option>\\n                        <mat-option value=\\\"SIM CARD\\\">SIM CARD  </mat-option>\\n                        <mat-option value=\\\"ROUTER\\\">ROUTER  </mat-option>\\n                        <mat-option value=\\\"CANDIDATE\\\">CANDIDATE </mat-option>\\n                        <mat-option value=\\\"ACCESS CODE\\\">ACCESS CODE </mat-option>\\n                        <mat-option value=\\\"PASSWORD\\\">PASSWORD </mat-option>\\n                        <mat-option value=\\\"OTHERS\\\">OTHERS </mat-option>\\n                       </mat-select>\\n                     <mat-hint style=\\\"color: blue\\\">Select Issue</mat-hint>\\n                  </mat-form-field>\\n                 </div>\\n                 <br>\\n                 <div class=\\\"row\\\" style=\\\"text-align:center;\\\">\\n                  <mat-form-field  style=\\\"width:500px !important\\\"  color=\\\"accent\\\" >\\n                    <textarea matInput placeholder=\\\"PROBLEM DESCRIPTION\\\" ngModel formControlName=\\\"LogProblem\\\" name=\\\"logproblem\\\"  required >  \\n  \\n                     </textarea>\\n                   <mat-hint style=\\\"color: blue\\\">Enter problem</mat-hint>\\n                </mat-form-field>\\n               </div>\\n               <br>\\n               <div class=\\\"row\\\" style=\\\"text-align:center;\\\">\\n                <mat-form-field  style=\\\"width:500px !important\\\"  color=\\\"accent\\\" >\\n                  <textarea matInput placeholder=\\\"SUMMARY OF SOLUTION\\\" ngModel formControlName=\\\"LogSolution\\\" name=\\\"logsolution\\\"  required >  \\n\\n                   </textarea>\\n                 <mat-hint style=\\\"color: blue\\\">Enter proposed solution</mat-hint>\\n              </mat-form-field>\\n             </div>\\n             <br>\\n             <div class=\\\"row\\\" style=\\\"text-align:center;\\\">\\n              <mat-form-field  color=\\\"accent\\\" >\\n                <mat-select placeholder=\\\"ISSUE STATUS\\\" ngModel formControlName=\\\"LogIssueStatus\\\" name=\\\"logissuestatus\\\"  required >  \\n                  <mat-option value=\\\"RESOLVED\\\">RESOLVED </mat-option>\\n              <mat-option value=\\\"OPEN\\\">OPEN  </mat-option>\\n              <mat-option value=\\\"TRANSFERRED\\\">TRANSFERRED  </mat-option>\\n                </mat-select>\\n               <mat-hint style=\\\"color: blue\\\">Select Issue Status</mat-hint>\\n            </mat-form-field>\\n           </div>\\n           <br>\\n\\n                   \\n                 \\n                   <div class=\\\"row\\\" style=\\\"text-align:center;\\\">\\n                   <button class=\\\"primary\\\" [disabled]=\\\"!LogForm.form.valid\\\"  color=\\\"primary\\\" mat-raised-button>SUBMIT LOG</button>\\n                   </div>\\n                </form>                                    \\n                    </div> \\n                </div>\\n              <!--   <div class=\\\"col-md-2\\\"></div> -->\\n            </div>\\n        </div>\\n\\n\\n        <div class=\\\"container-fluid\\\">     \\n          <div class=\\\"row\\\">\\n            <!--   <div class=\\\"col-md-2\\\"></div> -->\\n              <div class=\\\"col-md-12\\\">\\n             \\n               <div class=\\\"row card\\\">\\n                <div fxFlex class=\\\"table-component-holder mat-elevation-z4\\\">\\n                  <mat-toolbar class=\\\"table-header\\\">\\n                    <h1 class=\\\"mat-headline center-align\\\" >LOGGED COMPLAINTS</h1>\\n                  </mat-toolbar>\\n                        \\n                  \\n                  <div class=\\\"table-container\\\">\\n                     \\n                     <mat-paginator [pageSizeOptions]=\\\"[10, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n                     <mat-form-field style=\\\"font-size: 14px; width: 90%; padding: 8px 24px 0\\\">\\n                        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\n                      </mat-form-field> \\n                     <mat-table [dataSource]=\\\"dataSource\\\"  matSort class=\\\"mat-elevation-z8\\\">\\n                        <ng-container matColumnDef=\\\"SerialNo\\\" >\\n                            <mat-header-cell style=\\\"flex: 0 0 8%;;\\\" *matHeaderCellDef mat-sort-header>S/N</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px; flex: 0 0 8%;\\\" *matCellDef=\\\"let registrationreport\\\">{{ registrationreport.SerialNo }}</mat-cell>\\n                          </ng-container>\\n                       <!--  <ng-container matColumnDef=\\\"Refnum\\\" >\\n                            <mat-header-cell style=\\\"flex: 0 0 15%;;\\\" *matHeaderCellDef mat-sort-header>Refnum</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px; flex: 0 0 15%;\\\" *matCellDef=\\\"let registrationreport\\\">{{ registrationreport.Refnum }}</mat-cell>\\n                          </ng-container> -->\\n\\n                          <ng-container matColumnDef=\\\"StateName\\\">\\n                            <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef mat-sort-header>STATE NAME</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px; flex: 0 0 13%;\\\" *matCellDef=\\\"let registrationreport\\\">{{registrationreport.StateName }}</mat-cell>\\n                          </ng-container>\\n                        \\n                          <ng-container matColumnDef=\\\"CentreName\\\">\\n                            <mat-header-cell style=\\\"flex: 0 0 30%;\\\" *matHeaderCellDef mat-sort-header>CENTRE NAME</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px; flex: 0 0 30%;\\\" *matCellDef=\\\"let registrationreport\\\">{{registrationreport.CentreName }}</mat-cell>\\n                          </ng-container>\\n                        \\n                         \\n\\n                          <ng-container matColumnDef=\\\"IssueCategory\\\">\\n                            <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef mat-sort-header>CATEGORY</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px;flex: 0 0 13%;\\\" *matCellDef=\\\"let registrationreport\\\">{{registrationreport.IssueCategory }}</mat-cell>\\n                          </ng-container> \\n\\n                          <ng-container matColumnDef=\\\"IssueStatus\\\">\\n                            <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef mat-sort-header>STATUS</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px; flex: 0 0 13%;\\\" *matCellDef=\\\"let registrationreport\\\" [ngClass]=\\\"{'green': cell == solved}\\\">{{registrationreport.IssueStatus }}</mat-cell>\\n                          </ng-container>\\n\\n                          <ng-container matColumnDef=\\\"ProblemDesc\\\">\\n                            <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef mat-sort-header>PROBLEM</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px; flex: 0 0 13%;\\\" *matCellDef=\\\"let registrationreport\\\" [ngClass]=\\\"{'green': cell == solved}\\\">{{registrationreport.ProblemDesc }}</mat-cell>\\n                          </ng-container>\\n\\n                          <ng-container matColumnDef=\\\"Solution\\\">\\n                            <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef mat-sort-header>STATUS</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px; flex: 0 0 13%;\\\" *matCellDef=\\\"let registrationreport\\\" [ngClass]=\\\"{'green': cell == solved}\\\">{{registrationreport.Solution }}</mat-cell>\\n                          </ng-container>\\n\\n\\n                         <!--  <ng-container matColumnDef=\\\"LoggedBy\\\">\\n                            <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef mat-sort-header>LOGGED BY</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px; flex: 0 0 13%;\\\" *matCellDef=\\\"let registrationreport\\\">{{registrationreport.LoggedBy }}</mat-cell>\\n                          </ng-container> -->\\n\\n                          <ng-container matColumnDef=\\\"LoggedDate\\\">\\n                            <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef mat-sort-header>LOGGED DATE</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px; flex: 0 0 13%;\\\" *matCellDef=\\\"let registrationreport\\\">{{registrationreport.LoggedDate | date }}</mat-cell>\\n                          </ng-container>\\n\\n                          <ng-container  matColumnDef=\\\"actions\\\" >\\n                              <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef>ACTIONS</mat-header-cell>\\n                              <mat-cell *matCellDef=\\\"let row; let i=index;\\\">\\n                                  <button mat-icon-button color=\\\"primary\\\" (click)=\\\"StartView(i, row.SerialNo, row.CentreName, row.IssueCategory, row.IssueStatus, row.ProblemDesc, row.Solution, row.LoggedBy, row.LoggedDate)\\\">\\n                                      <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\n                                    </button>\\n                              </mat-cell>\\n                            </ng-container>\\n                        \\n                                     \\n                          <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n                          <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n                        </mat-table>\\n                  \\n               \\n                </div>\\n                </div>\\n                     \\n                 \\n                  \\n                  </div> \\n              </div>\\n            <!--   <div class=\\\"col-md-2\\\"></div> -->\\n          </div>\\n      </div>\\n\\n\\n\\n\\n\\n\\n    \\n\\n  </div>\\n</div>\\n\"","import { ViewdialogComponent } from './../dialog/viewdialog/viewdialog.component';\nimport { ExaminationService } from './../examinations.service';\nimport { SituationReport, State, UtmeCentres, Statess, RegistrationReport } from './../examinations.model';\nimport { Component, OnInit, OnDestroy, ViewChild, AfterViewInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatTableDataSource, MatPaginator, MatSort, MatDialog } from '@angular/material';\n import {DataSource} from '@angular/cdk/collections';\nimport { Session } from 'protractor';\n\n\n@Component({\n  selector: 'app-reg-report',\n  templateUrl: './reg-report.component.html',\n  styleUrls: ['./reg-report.component.css']\n})\nexport class RegReportComponent implements OnInit, AfterViewInit, OnDestroy  {\n\n  registrationreport: RegistrationReport[];\n  state: State[];\n  selectedstate: Statess = new Statess (1, 'ABIA');\n  centres: UtmeCentres[];\n  StoredCentres: UtmeCentres[];\n  DisplayedCentres: UtmeCentres[];\n  loggedby: string;\n\n /*  displayedColumns = ['CentreID', 'CentreName', 'Session', 'Caller', 'IssueCategory', 'IssueStatus', 'LoggedBy', 'LoggedDate']; */\n  displayedColumns = ['SerialNo', 'StateName', 'CentreName', 'IssueCategory', 'IssueStatus', 'LoggedDate', 'actions'];\n\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  LogFormgroup: FormGroup;\n  dataSource: MatTableDataSource<RegistrationReport>;\n\n  constructor(private _formBuilder: FormBuilder, private toastr: ToastrService,\n    private examinationservice: ExaminationService,\n    private dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.loggedby = localStorage.getItem('profilename');\n    this.LoadState();\n    this.LoadCentre();\n    this.LoadRegistrationReport();\n\n    this.LogFormgroup = this._formBuilder.group({\n      LogState: ['', Validators.required],\n      LogCentre: ['', Validators.required],\n      LogIssueStatus: ['', Validators.required],\n      LogIssueCategory: ['', Validators.required],\n      LogProblem: ['', Validators.required],\n      LogSolution: ['', Validators.required],\n    });\n  }\n\n  LoadState() {\n    this.examinationservice.GetUTMEState().subscribe(\n      result => {this.state = result; },\n      error => console.error(error));\n  }\n\n  LoadCentre() {\n    this.examinationservice.GetRegistrationCentres().subscribe(\n      result => {this.StoredCentres = result; },\n      error => console.error(error));\n  }\n\n  LoadRegistrationReport() {\n    this.examinationservice.GetUTMERegistration(this.loggedby).subscribe(\n      result => {\n        this.dataSource = new MatTableDataSource(result);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort; },\n      error => console.error(error));\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  StartView(i: number, serialno: string, centrename: string,  issuecategory: string,\n    issuestatus: string, problemdesc: string, solution: string, loggedby: string, loggeddate: string) {\n    const dialogref = this.dialog.open(ViewdialogComponent, {\n    data: {i: i, serialno: serialno, centrename: centrename,\n             issuecategory: issuecategory, problemdesc: problemdesc, solution: solution, issuestatus: issuestatus, loggedby: loggedby,\n        loggeddate: loggeddate}\n    });\n    dialogref.afterClosed().subscribe(() => {\n    this.LoadRegistrationReport();\n    });\n\n  }\n  LoadCentres(stat) {\n    this.DisplayedCentres = this.StoredCentres.filter((item) => item.StateName === stat);\n  }\n\n\n  SubmitLog() {\n    this.examinationservice.InsertRegistrationReport(this.LogFormgroup.value, this.loggedby).subscribe(result => {\n    this.showSuccess();\n    this.LoadRegistrationReport();\n    this.LogFormgroup.reset();\n    },\n    error => {\n      this.showError();\n    });\n\n  }\n\n  showSuccess() {\n    this.toastr.success('Updated Succesfully');\n  }\n  showError() {\n    this.toastr.error('Update Failed, Please try again');\n  }\n\n  ngAfterViewInit() {\n\n    }\n\n    ngOnDestroy() {\n\n    }\n\n}\n","module.exports = \"\\n<div fxLayout=\\\"column\\\"  class=\\\"components-container-gt-xs\\\"  [ngClass.xs]=\\\"'components-container-xs'\\\"  fxLayoutGap=\\\"20px\\\">\\n\\n  <div fxFlex class=\\\"datepicker-component-holder mat-elevation-z4\\\">\\n   \\n     <div class=\\\"container-fluid\\\">     \\n          <div class=\\\"row\\\">\\n            <!--   <div class=\\\"col-md-2\\\"></div> -->\\n              <div class=\\\"col-md-12\\\">\\n             \\n               <div class=\\\"row card\\\">\\n                <div fxFlex class=\\\"table-component-holder mat-elevation-z4\\\">\\n                  <mat-toolbar class=\\\"table-header\\\">\\n                    <h1 class=\\\"mat-headline center-align\\\" >LOGGED COMPLAINTS</h1>\\n                  </mat-toolbar>\\n                        \\n                  \\n                  <div class=\\\"table-container\\\">\\n                     \\n                     <mat-paginator [pageSizeOptions]=\\\"[10, 50, 100, 1000]\\\" showFirstLastButtons></mat-paginator>\\n                    <button style=\\\"align-items: flex-end\\\" (click)=\\\"exportAsXLSX()\\\"><i class=\\\"fa fa-file-excel-o\\\" style=\\\"font-size:48px;color:blue\\\"></i></button>\\n                   \\n                     <mat-form-field style=\\\"font-size: 14px; width: 90%; padding: 8px 24px 0\\\">\\n                        \\n                      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\n                      </mat-form-field> \\n                     <mat-table [dataSource]=\\\"dataSource\\\"  matSort class=\\\"mat-elevation-z8\\\">\\n                        <ng-container matColumnDef=\\\"SerialNo\\\" >\\n                            <mat-header-cell style=\\\"flex: 0 0 8%;;\\\" *matHeaderCellDef mat-sort-header>S/N</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px; flex: 0 0 8%;\\\" *matCellDef=\\\"let registrationreport\\\">{{ registrationreport.SerialNo }}</mat-cell>\\n                          </ng-container>\\n                       <!--  <ng-container matColumnDef=\\\"Refnum\\\" >\\n                            <mat-header-cell style=\\\"flex: 0 0 15%;;\\\" *matHeaderCellDef mat-sort-header>Refnum</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px; flex: 0 0 15%;\\\" *matCellDef=\\\"let registrationreport\\\">{{ registrationreport.Refnum }}</mat-cell>\\n                          </ng-container> -->\\n\\n                          <ng-container matColumnDef=\\\"StateName\\\">\\n                            <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef mat-sort-header>STATE NAME</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px; flex: 0 0 13%;\\\" *matCellDef=\\\"let registrationreport\\\">{{registrationreport.StateName }}</mat-cell>\\n                          </ng-container>\\n                        \\n                          <ng-container matColumnDef=\\\"CentreName\\\">\\n                            <mat-header-cell style=\\\"flex: 0 0 30%;\\\" *matHeaderCellDef mat-sort-header>CENTRE NAME</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px; flex: 0 0 30%;\\\" *matCellDef=\\\"let registrationreport\\\">{{registrationreport.CentreName }}</mat-cell>\\n                          </ng-container>\\n                        \\n                         \\n\\n                          <ng-container matColumnDef=\\\"IssueCategory\\\">\\n                            <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef mat-sort-header>CATEGORY</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px;flex: 0 0 13%;\\\" *matCellDef=\\\"let registrationreport\\\">{{registrationreport.IssueCategory }}</mat-cell>\\n                          </ng-container> \\n\\n                          <ng-container matColumnDef=\\\"IssueStatus\\\">\\n                            <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef mat-sort-header>STATUS</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px; flex: 0 0 13%;\\\" *matCellDef=\\\"let registrationreport\\\" [ngClass]=\\\"{'green': cell == solved}\\\">{{registrationreport.IssueStatus }}</mat-cell>\\n                          </ng-container>\\n\\n                          <ng-container matColumnDef=\\\"ProblemDesc\\\">\\n                            <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef mat-sort-header>PROBLEM</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px; flex: 0 0 13%;\\\" *matCellDef=\\\"let registrationreport\\\" [ngClass]=\\\"{'green': cell == solved}\\\">{{registrationreport.ProblemDesc }}</mat-cell>\\n                          </ng-container>\\n\\n                          <ng-container matColumnDef=\\\"Solution\\\">\\n                            <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef mat-sort-header>STATUS</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px; flex: 0 0 13%;\\\" *matCellDef=\\\"let registrationreport\\\" [ngClass]=\\\"{'green': cell == solved}\\\">{{registrationreport.Solution }}</mat-cell>\\n                          </ng-container>\\n\\n\\n                         <!--  <ng-container matColumnDef=\\\"LoggedBy\\\">\\n                            <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef mat-sort-header>LOGGED BY</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px; flex: 0 0 13%;\\\" *matCellDef=\\\"let registrationreport\\\">{{registrationreport.LoggedBy }}</mat-cell>\\n                          </ng-container> -->\\n\\n                          <ng-container matColumnDef=\\\"LoggedDate\\\">\\n                            <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef mat-sort-header>LOGGED DATE</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px; flex: 0 0 13%;\\\" *matCellDef=\\\"let registrationreport\\\">{{registrationreport.LoggedDate | date }}</mat-cell>\\n                          </ng-container>\\n\\n                          <ng-container  matColumnDef=\\\"actions\\\" >\\n                              <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef>ACTIONS</mat-header-cell>\\n                              <mat-cell *matCellDef=\\\"let row; let i=index;\\\">\\n                                  <button mat-icon-button color=\\\"primary\\\" (click)=\\\"StartView(i, row.SerialNo, row.CentreName, row.IssueCategory, row.IssueStatus, row.ProblemDesc, row.Solution, row.LoggedBy, row.LoggedDate)\\\">\\n                                      <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\n                                    </button>\\n                              </mat-cell>\\n                            </ng-container>\\n                        \\n                                     \\n                          <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n                          <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n                        </mat-table>\\n                  \\n               \\n                </div>\\n                </div>\\n                     \\n                 \\n                  \\n                  </div> \\n              </div>\\n            <!--   <div class=\\\"col-md-2\\\"></div> -->\\n          </div>\\n      </div>\\n\\n\\n\\n\\n\\n\\n    \\n\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { AppService } from './../../app.service';\nimport { ViewdialogComponent } from './../dialog/viewdialog/viewdialog.component';\nimport { ExaminationService } from './../examinations.service';\nimport { SituationReport, State, UtmeCentres, Statess, RegistrationReport } from './../examinations.model';\nimport { Component, OnInit, OnDestroy, ViewChild, AfterViewInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatTableDataSource, MatPaginator, MatSort, MatDialog } from '@angular/material';\n import {DataSource} from '@angular/cdk/collections';\nimport { Session } from 'protractor';\n\n@Component({\n  selector: 'app-reg-reportadmin',\n  templateUrl: './reg-reportadmin.component.html',\n  styleUrls: ['./reg-reportadmin.component.scss']\n})\nexport class RegReportadminComponent implements OnInit, AfterViewInit, OnDestroy  {\n\n  registrationreport: RegistrationReport[];\n  state: State[];\n  selectedstate: Statess = new Statess (1, 'ABIA');\n  centres: UtmeCentres[];\n  StoredCentres: UtmeCentres[];\n  loggedby: string;\n  renderedData: any;\n\n /*  displayedColumns = ['CentreID', 'CentreName', 'Session', 'Caller', 'IssueCategory', 'IssueStatus', 'LoggedBy', 'LoggedDate']; */\n  displayedColumns = ['SerialNo', 'StateName', 'CentreName', 'IssueCategory', 'IssueStatus', 'LoggedDate', 'actions'];\n\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  LogFormgroup: FormGroup;\n  dataSource: MatTableDataSource<RegistrationReport>;\n\n  constructor(private _formBuilder: FormBuilder, private toastr: ToastrService,\n    private examinationservice: ExaminationService, private exelservice: AppService,\n    private dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.loggedby = localStorage.getItem('profilename');\n    this.LoadRegistrationReport();\n\n    this.LogFormgroup = this._formBuilder.group({\n      LogCentre: ['', Validators.required],\n      LogIssueStatus: ['', Validators.required],\n      LogIssueCategory: ['', Validators.required],\n      LogProblem: ['', Validators.required],\n      LogSolution: ['', Validators.required],\n    });\n  }\n\n\n  LoadRegistrationReport() {\n    this.examinationservice.GetAllUTMERegistration().subscribe(\n      result => {\n        this.dataSource = new MatTableDataSource(result);\n        this.dataSource.connect().subscribe(res => this.renderedData = res);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort; },\n      error => console.error(error));\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  StartView(i: number, serialno: string, centrename: string,  issuecategory: string,\n    issuestatus: string, problemdesc: string, solution: string, loggedby: string, loggeddate: string) {\n    const dialogref = this.dialog.open(ViewdialogComponent, {\n    data: {i: i, serialno: serialno, centrename: centrename,\n             issuecategory: issuecategory, problemdesc: problemdesc, solution: solution, issuestatus: issuestatus, loggedby: loggedby,\n        loggeddate: loggeddate}\n    });\n    dialogref.afterClosed().subscribe(() => {\n    this.LoadRegistrationReport();\n    });\n\n  }\n\n  getPageSizeOptions(): number[] {\n    return [5, 10, 20, this.dataSource.data.length];\n  }\n\n  exportAsXLSX(): void {\n    this.exelservice.exportAsExcelFile(this.renderedData, 'COMPLAINT-LOG ');\n }\n\n\n  showSuccess() {\n    this.toastr.success('Updated Succesfully');\n  }\n  showError() {\n    this.toastr.error('Update Failed, Please try again');\n  }\n\n  ngAfterViewInit() {\n\n    }\n\n    ngOnDestroy() {\n\n    }\n\n}\n","module.exports = \".header-section{\\r\\n    height: 80px;\\r\\n    line-height: 80px;\\r\\n    color: beige;\\r\\n    background-color: rgb(46, 43, 43);\\r\\n    font-size: 24px;\\r\\n    padding-left: 20px;\\r\\n}\\r\\n\\r\\n.card{\\r\\n    background-color: white;\\r\\n    box-shadow:0 3px 5px -1px rgba(0,0,0,.2), 0 6px 10px 0 rgba(0,0,0,.14), 0 1px 18px 0 rgba(0,0,0,.12);\\r\\n    color:black;\\r\\n    margin: 20px;\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\n.uploadList{\\r\\n    padding: 10px;\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.main-div{\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n  }\"","module.exports = \"\\n<div fxLayout=\\\"column\\\"  class=\\\"components-container-gt-xs\\\"  [ngClass.xs]=\\\"'components-container-xs'\\\"  fxLayoutGap=\\\"20px\\\">\\n\\n  <div fxFlex class=\\\"datepicker-component-holder mat-elevation-z4\\\">\\n    <mat-toolbar class=\\\"table-header\\\">\\n      <h1 class=\\\"mat-headline center-align\\\">UTME HELP LINE LOG</h1>\\n    </mat-toolbar>\\n\\n     \\n        <div class=\\\"container-fluid\\\">\\n           \\n            <div class=\\\"row\\\">\\n              <!--   <div class=\\\"col-md-2\\\"></div> -->\\n                <div class=\\\"col-md-12\\\">\\n               \\n                 <div class=\\\"row card\\\">\\n                    <form [formGroup]=\\\"LogFormgroup\\\" (ngSubmit)=\\\"SubmitLog()\\\" #LogForm=\\\"ngForm\\\">\\n                      <div class=\\\"row\\\" style=\\\"text-align:center;\\\">\\n                        <mat-form-field  color=\\\"accent\\\" >\\n                          <mat-select placeholder=\\\"CALLER\\\" ngModel formControlName=\\\"LogCaller\\\" name=\\\"logcaller\\\"  required >  \\n                         <mat-option value=\\\"SUPERVISOR\\\">SUPERVISOR </mat-option>\\n                        <mat-option value=\\\"TECHNICAL OFFICER\\\">TECHNICAL OFFICER  </mat-option>\\n                        <mat-option value=\\\"BVM OPERATOR\\\">BVM OPERATOR  </mat-option>\\n                        <mat-option value=\\\"OTHERS\\\">OTHERS  </mat-option>\\n                          </mat-select>\\n                         <mat-hint style=\\\"color: blue\\\">Select Caller</mat-hint>\\n                      </mat-form-field>\\n                     </div>\\n                     <br>\\n                     \\n                     \\n                      <div class=\\\"row\\\" style=\\\"text-align:center;\\\">\\n                        <mat-form-field  color=\\\"accent\\\" >\\n                          <mat-select placeholder=\\\"STATE\\\" formControlName=\\\"LogState\\\" (selectionChange)=\\\"LoadCentres($event.value)\\\" name=\\\"logstate\\\"  required >  \\n                          <mat-option *ngFor=\\\"let stat of state\\\" [value]=\\\"stat.StateName\\\"> {{stat.StateName}} </mat-option>\\n                          </mat-select>\\n                         <mat-hint style=\\\"color: blue\\\">Select State</mat-hint>\\n                      </mat-form-field>\\n                     </div>\\n                     <br>\\n                    \\n                      <div class=\\\"row\\\" style=\\\"text-align:center;\\\">\\n                        <mat-form-field  style=\\\"width:500px !important\\\"  color=\\\"accent\\\" >\\n                          <mat-select placeholder=\\\"CENTRE\\\" ngModel formControlName=\\\"LogCentre\\\" name=\\\"logcentre\\\"  required >  \\n                            <mat-option *ngFor=\\\"let centre of DisplayedCentres\\\" [value]=\\\"centre.CentreName\\\">{{centre.CentreName}}</mat-option>\\n                           </mat-select>\\n                         <mat-hint style=\\\"color: blue\\\">Select Centre</mat-hint>\\n                      </mat-form-field>\\n                     </div>\\n                     <br>\\n                    \\n                   <div class=\\\"row\\\" style=\\\"text-align:center;\\\">\\n                    <mat-form-field  style=\\\"width:500px !important\\\"  color=\\\"accent\\\" >\\n                      <mat-select placeholder=\\\"ISSUE CATEGORY\\\" ngModel formControlName=\\\"LogIssueCategory\\\" name=\\\"logissuecategory\\\"  required >  \\n                        <mat-option value=\\\"ADMINISTRATIVE\\\">ADMINISTRATIVE </mat-option>\\n                        <mat-option value=\\\"FINANCIAL\\\">FINANCIAL  </mat-option>\\n                        <mat-option value=\\\"DELIVERY SERVER\\\">DELIVERY SERVER  </mat-option>\\n                        <mat-option value=\\\"HARDWARE\\\">HARDWARE  </mat-option>\\n                        <mat-option value=\\\"SECURITY\\\">SECURITY </mat-option>\\n                        <mat-option value=\\\"SIM NETWORK \\\">SIM NETWORK </mat-option>\\n                        <mat-option value=\\\"LAN NETWORK\\\">LAN NETWORK  </mat-option>\\n                        <mat-option value=\\\"TEST SOFTWARE\\\">TEST SOFTWARE  </mat-option>\\n                      </mat-select>\\n                     <mat-hint style=\\\"color: blue\\\">Select Issue</mat-hint>\\n                  </mat-form-field>\\n                 </div>\\n                 <br>\\n                 <div class=\\\"row\\\" style=\\\"text-align:center;\\\">\\n                  <mat-form-field  style=\\\"width:500px !important\\\"  color=\\\"accent\\\" >\\n                    <textarea matInput placeholder=\\\"PROBLEM DESCRIPTION\\\" ngModel formControlName=\\\"LogProblem\\\" name=\\\"logproblem\\\"  required >  \\n  \\n                     </textarea>\\n                   <mat-hint style=\\\"color: blue\\\">Enter problem</mat-hint>\\n                </mat-form-field>\\n               </div>\\n               <br>\\n               <div class=\\\"row\\\" style=\\\"text-align:center;\\\">\\n                <mat-form-field  style=\\\"width:500px !important\\\"  color=\\\"accent\\\" >\\n                  <textarea matInput placeholder=\\\"SUMMARY OF SOLUTION\\\" ngModel formControlName=\\\"LogSolution\\\" name=\\\"logsolution\\\"  required >  \\n\\n                   </textarea>\\n                 <mat-hint style=\\\"color: blue\\\">Enter proposed solution</mat-hint>\\n              </mat-form-field>\\n             </div>\\n             <br>\\n             <div class=\\\"row\\\" style=\\\"text-align:center;\\\">\\n              <mat-form-field  color=\\\"accent\\\" >\\n                <mat-select placeholder=\\\"ISSUE STATUS\\\" ngModel formControlName=\\\"LogIssueStatus\\\" name=\\\"logissuestatus\\\"  required >  \\n                  <mat-option value=\\\"RESOLVED\\\">RESOLVED </mat-option>\\n              <mat-option value=\\\"OPEN\\\">OPEN  </mat-option>\\n              <mat-option value=\\\"TRANSFERRED\\\">TRANSFERRED  </mat-option>\\n                </mat-select>\\n               <mat-hint style=\\\"color: blue\\\">Select Issue Status</mat-hint>\\n            </mat-form-field>\\n           </div>\\n           <br>\\n\\n                   \\n                 \\n                   <div class=\\\"row\\\" style=\\\"text-align:center;\\\">\\n                   <button class=\\\"primary\\\" [disabled]=\\\"!LogForm.form.valid\\\"  color=\\\"primary\\\" mat-raised-button>SUBMIT LOG</button>\\n                   </div>\\n                </form>                                    \\n                    </div> \\n                </div>\\n              <!--   <div class=\\\"col-md-2\\\"></div> -->\\n            </div>\\n        </div>\\n\\n\\n        <div class=\\\"container-fluid\\\">     \\n          <div class=\\\"row\\\">\\n            <!--   <div class=\\\"col-md-2\\\"></div> -->\\n              <div class=\\\"col-md-12\\\">\\n             \\n               <div class=\\\"row card\\\">\\n                <div fxFlex class=\\\"table-component-holder mat-elevation-z4\\\">\\n                  <mat-toolbar class=\\\"table-header\\\">\\n                    <h1 class=\\\"mat-headline center-align\\\" >LOGGED COMPLAINTS</h1>\\n                  </mat-toolbar>\\n                        \\n                  \\n                  <div class=\\\"table-container\\\">\\n                     \\n                     <mat-paginator [pageSizeOptions]=\\\"[10, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n                     <mat-form-field style=\\\"font-size: 14px; width: 90%; padding: 8px 24px 0\\\">\\n                        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\n                      </mat-form-field> \\n                     <mat-table [dataSource]=\\\"dataSource\\\"  matSort class=\\\"mat-elevation-z8\\\">\\n                        <ng-container matColumnDef=\\\"SerialNo\\\" >\\n                            <mat-header-cell style=\\\"flex: 0 0 8%;;\\\" *matHeaderCellDef mat-sort-header>S/N</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px; flex: 0 0 8%;\\\" *matCellDef=\\\"let situationreport\\\">{{ situationreport.SerialNo }}</mat-cell>\\n                          </ng-container>\\n\\n                          <ng-container matColumnDef=\\\"StateName\\\" >\\n                            <mat-header-cell style=\\\"flex: 0 0 10%;;\\\" *matHeaderCellDef mat-sort-header>STATE</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px; flex: 0 0 10%;\\\" *matCellDef=\\\"let situationreport\\\">{{ situationreport.StateName }}</mat-cell>\\n                          </ng-container>\\n\\n                        <ng-container matColumnDef=\\\"CentreID\\\" >\\n                            <mat-header-cell style=\\\"flex: 0 0 10%;;\\\" *matHeaderCellDef mat-sort-header>CTR-ID</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px; flex: 0 0 10%;\\\" *matCellDef=\\\"let situationreport\\\">{{ situationreport.CentreID }}</mat-cell>\\n                          </ng-container>\\n                        \\n                          <ng-container matColumnDef=\\\"CentreName\\\">\\n                            <mat-header-cell style=\\\"flex: 0 0 35%;\\\" *matHeaderCellDef mat-sort-header>CENTRE NAME</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px; flex: 0 0 35%;\\\" *matCellDef=\\\"let situationreport\\\">{{situationreport.CentreName }}</mat-cell>\\n                          </ng-container>\\n                        \\n                          <ng-container matColumnDef=\\\"Session\\\">\\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>SESSION</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px;\\\" *matCellDef=\\\"let situationreport\\\">{{situationreport.Session }}</mat-cell>\\n                          </ng-container>\\n\\n                          <ng-container matColumnDef=\\\"Caller\\\">\\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>CALLER</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px;\\\" *matCellDef=\\\"let situationreport\\\">{{situationreport.Caller}}</mat-cell>\\n                          </ng-container>\\n\\n                          <ng-container matColumnDef=\\\"IssueCategory\\\">\\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>CATEGORY</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px;\\\" *matCellDef=\\\"let situationreport\\\">{{situationreport.IssueCategory }}</mat-cell>\\n                          </ng-container> \\n\\n                          <ng-container matColumnDef=\\\"IssueStatus\\\">\\n                            <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef mat-sort-header>STATUS</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px; flex: 0 0 13%;\\\" *matCellDef=\\\"let situationreport\\\" [ngClass]=\\\"{'green': cell == solved}\\\">{{situationreport.IssueStatus }}</mat-cell>\\n                          </ng-container>\\n\\n                          <ng-container matColumnDef=\\\"ProblemDesc\\\">\\n                            <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef mat-sort-header>PROBLEM</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px; flex: 0 0 13%;\\\" *matCellDef=\\\"let situationreport\\\" [ngClass]=\\\"{'green': cell == solved}\\\">{{situationreport.ProblemDesc }}</mat-cell>\\n                          </ng-container>\\n\\n                          <ng-container matColumnDef=\\\"Solution\\\">\\n                            <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef mat-sort-header>STATUS</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px; flex: 0 0 13%;\\\" *matCellDef=\\\"let situationreport\\\" [ngClass]=\\\"{'green': cell == solved}\\\">{{situationreport.Solution }}</mat-cell>\\n                          </ng-container>\\n\\n<!-- \\n                          <ng-container matColumnDef=\\\"LoggedBy\\\">\\n                            <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef mat-sort-header>LOGGED BY</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px; flex: 0 0 13%;\\\" *matCellDef=\\\"let situationreport\\\">{{situationreport.LoggedBy }}</mat-cell>\\n                          </ng-container> -->\\n\\n                          <ng-container matColumnDef=\\\"LoggedDate\\\">\\n                            <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef mat-sort-header>LOGGED DATE</mat-header-cell>\\n                            <mat-cell style=\\\"font-size: 10px; flex: 0 0 13%;\\\" *matCellDef=\\\"let situationreport\\\">{{situationreport.LoggedDate | date }}</mat-cell>\\n                          </ng-container>\\n\\n                          <ng-container  matColumnDef=\\\"actions\\\" >\\n                              <mat-header-cell style=\\\"flex: 0 0 13%;\\\" *matHeaderCellDef>ACTIONS</mat-header-cell>\\n                              <mat-cell *matCellDef=\\\"let row; let i=index;\\\">\\n                                  <button mat-icon-button color=\\\"primary\\\" (click)=\\\"StartView(i, row.SerialNo, row.CentreID, row.StateName, row.CentreName, row.Session, row.Caller, row.IssueCategory, row.IssueStatus, row.ProblemDesc, row.Solution, row.LoggedBy, row.LoggedDate)\\\">\\n                                      <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\n                                    </button>\\n                              </mat-cell>\\n                            </ng-container>\\n                        \\n                                     \\n                          <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n                          <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n                        </mat-table>\\n                  \\n               \\n                </div>\\n                </div>\\n                     \\n                 \\n                  \\n                  </div> \\n              </div>\\n            <!--   <div class=\\\"col-md-2\\\"></div> -->\\n          </div>\\n      </div>\\n\\n\\n\\n\\n\\n\\n    \\n\\n  </div>\\n</div>\\n\"","import { ViewdialogComponent } from './../dialog/viewdialog/viewdialog.component';\nimport { ExaminationService } from './../examinations.service';\nimport { SituationReport, State, UtmeCentres, Statess } from './../examinations.model';\nimport { Component, OnInit, OnDestroy, ViewChild, AfterViewInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatTableDataSource, MatPaginator, MatSort, MatDialog } from '@angular/material';\n import {DataSource} from '@angular/cdk/collections';\nimport { Session } from 'protractor';\n\n\n\n@Component({\n  selector: 'app-sit-report',\n  templateUrl: './sit-report.component.html',\n  styleUrls: ['./sit-report.component.css']\n})\n\nexport class SitReportComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  situationreport: SituationReport[];\n  state: State[];\n  selectedstate: Statess = new Statess (1, 'ABIA');\n  centres: UtmeCentres[];\n  StoredCentres: UtmeCentres[];\n  DisplayedCentres: UtmeCentres[];\n\n /*  displayedColumns = ['CentreID', 'CentreName', 'Session', 'Caller', 'IssueCategory', 'IssueStatus', 'LoggedBy', 'LoggedDate']; */\n  displayedColumns = ['SerialNo' , 'CentreID', 'StateName', 'CentreName', 'IssueStatus', 'LoggedDate', 'actions'];\n\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  LogFormgroup: FormGroup;\n  dataSource: MatTableDataSource<SituationReport>;\n\n  constructor(private _formBuilder: FormBuilder, private toastr: ToastrService,\n    private examinationservice: ExaminationService,\n    private dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.LoadState();\n    this.LoadCentre();\n    this.LoadSituationReport();\n\n    this.LogFormgroup = this._formBuilder.group({\n      LogState: ['', Validators.required],\n      LogCentre: ['', Validators.required],\n      LogCaller: ['', Validators.required],\n      LogIssue: ['', Validators.required],\n      LogIssueStatus: ['', Validators.required],\n      LogIssueCategory: ['', Validators.required],\n      LogProblem: ['', Validators.required],\n      LogSolution: ['', Validators.required],\n    });\n  }\n\n  LoadCentres(stat) {\n    console.log(stat);\n    this.DisplayedCentres = this.StoredCentres.filter((item) => item.StateName === stat);\n  }\n\n  LoadState() {\n    this.examinationservice.GetUTMEState().subscribe(\n      result => {this.state = result; },\n      error => console.error(error));\n  }\n\n  LoadCentre() {\n    this.examinationservice.GetUTMECentres().subscribe(\n      result => {this.StoredCentres = result; },\n      error => console.error(error));\n  }\n\n  LoadSituationReport() {\n    this.examinationservice.GetUTMESituation().subscribe(\n      result => {\n        this.dataSource = new MatTableDataSource(result);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort; },\n      error => console.error(error));\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  StartView(i: number, serialno: string, centreid: string, statename: string, centrename: string,  session: string, caller: string,\n     issuecategory: string, issuestatus: string, problemdesc: string, solution: string, loggedby: string, loggeddate: string) {\n    const dialogref = this.dialog.open(ViewdialogComponent, {\n    data: {i: i, serialno: serialno, centreid: centreid, statename: statename, centrename: centrename,  session: session, caller: caller,\n       issuecategory: issuecategory, problemdesc: problemdesc, solution: solution, issuestatus: issuestatus, loggedby: loggedby,\n        loggeddate: loggeddate}\n    });\n    dialogref.afterClosed().subscribe(() => {\n    this.LoadSituationReport();\n    });\n\n  }\n\n\n\n  SubmitLog() {\n\n  }\n\n  ngAfterViewInit() {\n\n    }\n\n    ngOnDestroy() {\n\n    }\n\n    onSelect(stateid) {\n      console.log(stateid);\n      this.centres = this.StoredCentres.filter((item) =>\n      item.StateId === stateid);\n    }\n}\n","module.exports = \"\\n\\n<div fxLayout=\\\"column\\\"  class=\\\"components-container-gt-xs\\\"  [ngClass.xs]=\\\"'components-container-xs'\\\"  fxLayoutGap=\\\"20px\\\">\\n\\n    <div fxFlex class=\\\"table-component-holder mat-elevation-z4\\\">\\n      <mat-toolbar class=\\\"table-header\\\">\\n        <h1 class=\\\"mat-headline center-align\\\" >UTME CENTRES</h1>\\n      </mat-toolbar>\\n     \\n          \\n      \\n      <div class=\\\"table-container\\\">\\n         \\n         <mat-paginator [pageSizeOptions]=\\\"[5, 10, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n         <mat-form-field style=\\\"font-size: 14px; width: 90%; padding: 8px 24px 0\\\">\\n            <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\n          </mat-form-field> \\n         <mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n            <ng-container matColumnDef=\\\"statename\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>STATE</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let utmecentres\\\">{{ utmecentres.Statename }}</mat-cell>\\n              </ng-container>\\n            \\n              <ng-container matColumnDef=\\\"Examtown\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>TOWN</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let utmecentres\\\">{{utmecentres.ExamTown }}</mat-cell>\\n              </ng-container>\\n            \\n              <ng-container matColumnDef=\\\"CentreName\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>CENTRE NAME</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let utmecentres\\\">{{utmecentres.CentreName }}</mat-cell>\\n              </ng-container>\\n            \\n                         \\n              <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n              <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n            </mat-table>\\n      \\n   \\n    </div>\\n    </div>\\n  </div>\\n  \"","module.exports = \"\"","import { LoaderService } from './../../loader/loader.service';\nimport { ExaminationService } from './../examinations.service';\nimport { Component, OnInit, OnDestroy, ViewChild, AfterViewInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Observable, Subscription } from 'rxjs';\nimport { UtmeCentres } from '../examinations.model';\nimport { Router } from '@angular/router';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\n import {DataSource} from '@angular/cdk/collections';\n\n@Component({\n  selector: 'app-utme-centres',\n  templateUrl: './utme-centres.component.html',\n  styleUrls: ['./utme-centres.component.scss']\n})\nexport class UtmeCentresComponent implements OnInit, AfterViewInit, OnDestroy {\n  utmecentres: UtmeCentres[];\n  UtmeCentreSubscription: Subscription;\n  displayedColumns = ['statename', 'Examtown', 'CentreName'];\n   dataSource: MatTableDataSource<UtmeCentres>;\n   // datasource = new UtmeCentreDataSource(this.examinationservice);\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private examinationservice: ExaminationService,\n    private loaderservice: LoaderService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.loaderservice.show();\n    this.examinationservice.GetUTMECentres().subscribe\n    (result => {\n      this.dataSource = new MatTableDataSource(result);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n      this.loaderservice.hide();\n    }\n    , error => console.error(error));\n  }\n\n\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  ngAfterViewInit() {\n  //  this.dataSource.paginator = this.paginator;\n// this.dataSource.sort = this.sort;\n  }\n\n  ngOnDestroy() {\n\n  }\n\n}\n\n\n"],"sourceRoot":""}