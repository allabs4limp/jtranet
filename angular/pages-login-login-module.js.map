{"version":3,"sources":["webpack:///./src/app/pages/login/login.component.html","webpack:///./src/app/pages/login/login.component.scss","webpack:///./src/app/pages/login/login.component.ts","webpack:///./src/app/pages/login/login.module.ts"],"names":[],"mappings":"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","file":"pages-login-login-module.js","sourcesContent":["module.exports = \"<div fxLayout=\\\"column\\\" fxFlexFill fxLayoutAlign=\\\"center center\\\"  style=\\\"\\nheight: 100%;\\nbackground-repeat: no-repeat;\\nbackground-position: center;\\nbackground-size: cover; \\\">\\n\\n<section class=\\\"loginForm\\\">\\n    <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\"  style=\\\"height: 700px;\\\">\\n            <div class=\\\"logo\\\">\\n                    <img alt=\\\"\\\" class=\\\"auto-style1\\\" src=\\\"../../../assets/jamb.jpg\\\" /> \\n                                              \\n                     </div>\\n        <mat-card>\\n            <mat-card-title>\\n                    \\n            \\n            </mat-card-title>\\t\\n            <mat-card-content>\\n        <form fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"center center\\\" #LoginForm=\\\"ngForm\\\" (ngSubmit)=\\\"OnLogin(LoginForm)\\\">\\n            <div>\\n                    <mat-form-field class=\\\"full-width\\\">\\n                            <input type=\\\"email\\\" matInput email ngModel placeholder=\\\"IDcard\\\" name=\\\"email\\\" #emailInput=\\\"ngModel\\\" required >\\n                            <mat-error *ngIf=\\\"emailInput.hasError('required')\\\">Field must not be empty</mat-error>\\n                            <mat-error *ngIf=\\\"!emailInput.hasError('required')\\\">Email is invalid</mat-error>\\n                     </mat-form-field>\\n             </div>\\n             <div> \\n                         <mat-form-field class=\\\"full-width\\\">\\n                            <input type=\\\"password\\\" matInput ngModel placeholder=\\\"Password\\\" #passInput=\\\"ngModel\\\" name=\\\"pass\\\" required >\\n                        </mat-form-field>\\n             </div>\\n             <div>\\n                <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" >Log in</button>\\n               </div>    \\n            \\n        </form>\\n    </mat-card-content>\\n</mat-card>\\n    </div>  \\n </section>\\n</div>\\n\"","module.exports = \".sigin-conainer {\\n  min-height: 100%;\\n  background-size: cover;\\n  padding: 100px; }\\n\\n.sigin-main {\\n  position: relative;\\n  margin: 0 auto;\\n  width: 500px; }\\n\\n.full-width {\\n  width: 100%; }\\n\\n.redirect {\\n  font-size: 14px;\\n  margin-left: 10px;\\n  color: #00AAAA; }\\n\"","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm, FormGroup, FormControl, Validators } from '@angular/forms';\n\n\nimport { AuthService } from './../../auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginform: FormGroup;\n  userDetails: User[];\n\n  ngOnInit() {\n\n  }\n\n  constructor (private authservice: AuthService, private router: Router) {\n\n  }\n\n  OnLogin(loginform: NgForm) {\n  this.authservice.LoginUser({email: loginform.value.email, password: loginform.value.pass})\n  .subscribe(result => {this.userDetails = result;\n  //   console.log(this.userDetails[0]);\n  if (this.userDetails[0] != null) {\n    localStorage.setItem('profilename', this.userDetails[0].Fullname);\n    localStorage.setItem('department', this.userDetails[0].Department);\n    localStorage.setItem('conraiss', this.userDetails[0].Conraiss);\n    localStorage.setItem('role', this.userDetails[0].Role);\n    localStorage.setItem('idcard', this.userDetails[0].IDcard);\n    localStorage.setItem('email', this.userDetails[0].Email);\n    localStorage.setItem('phoneno', this.userDetails[0].PhoneNo);\n    localStorage.setItem('certnum', this.userDetails[0].CertNo);\n    localStorage.setItem('ippisno', this.userDetails[0].IPPISNo);\n    this.router.navigate(['/auth/dashboard']);\n\n\n     }   else {\n   console.log('Nothing is here');\n  //  this.router.navigate(['/login']);\n }\n});\n}\n}\n","import { NgModule } from '@angular/core';\nimport { LoginComponent } from './login.component';\nimport { \n        MatCardModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatInputModule,\n        MatToolbarModule\n       } from '@angular/material';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule , ReactiveFormsModule} from '@angular/forms';\n\nconst routes: Routes = [\n    {path: '', component: LoginComponent},\n  ];\n@NgModule({\n    imports: [\n        MatCardModule,\n        CommonModule,\n        FlexLayoutModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatInputModule,\n        MatToolbarModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [   \n        LoginComponent,\n    ],\n    exports: [\n        RouterModule\n    ],\n    providers: [\n    ]\n})\nexport class LoginModule {\n}\n"],"sourceRoot":""}